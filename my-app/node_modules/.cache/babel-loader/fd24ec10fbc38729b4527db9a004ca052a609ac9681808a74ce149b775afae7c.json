{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/youne/Desktop/Brograming/WEB/Learning/FinalProject/quizblast/my-app/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/Users/youne/Desktop/Brograming/WEB/Learning/FinalProject/quizblast/my-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import{getCookie}from\"./components/csrf\";// interfaces\nexport function makeid(length){var chars='0123456789ABCDEFGHIJKLMNOPQRSTUVWXTZabcdefghiklmnopqrstuvwxyz'.split('');if(!length){length=Math.floor(Math.random()*chars.length);}var str='';for(var i=0;i<length;i++){str+=chars[Math.floor(Math.random()*chars.length)];}return str;}export function remove(list,id){return list.filter(function(item){return item.id!==id;});}export function getQuizs(){return _getQuizs.apply(this,arguments);}function _getQuizs(){_getQuizs=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(){var quizs;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:quizs=\"\";_context2.next=3;return fetch(\"/quiz\").then(function(response){return response.json();}).then(function(result){quizs=result;});case 3:return _context2.abrupt(\"return\",quizs);case 4:case\"end\":return _context2.stop();}},_callee2);}));return _getQuizs.apply(this,arguments);}export function subQuiz(_x){return _subQuiz.apply(this,arguments);}function _subQuiz(){_subQuiz=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(input){var id;return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1)switch(_context3.prev=_context3.next){case 0:id=\"\";_context3.next=3;return fetch(\"/new\",{method:\"POST\",body:JSON.stringify({\"name\":input})}).then(function(response){return response.json();}).then(function(result){return id=result.quiz_id;});case 3:return _context3.abrupt(\"return\",id);case 4:case\"end\":return _context3.stop();}},_callee3);}));return _subQuiz.apply(this,arguments);}export function subQuestion(_x2,_x3,_x4){return _subQuestion.apply(this,arguments);}function _subQuestion(){_subQuestion=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(quiz_id,input,optionsToSub){var question_id;return _regeneratorRuntime().wrap(function _callee4$(_context4){while(1)switch(_context4.prev=_context4.next){case 0:question_id=undefined;if(!(optionsToSub.length>0&&input!==\"\")){_context4.next=5;break;}_context4.next=4;return fetch(\"/question\",{method:\"POST\",body:JSON.stringify({\"quiz_id\":quiz_id,\"content\":input,\"option\":optionsToSub})}).then(function(response){return response.json();}).then(function(result){return question_id=result.question_id;});case 4:return _context4.abrupt(\"return\",question_id);case 5:case\"end\":return _context4.stop();}},_callee4);}));return _subQuestion.apply(this,arguments);}export function isOnlySpace(input){return!input.trim().length?false:true;}export function isSelect(option){for(var i=0;i<option.length;i++){if(option[i].correct){return true;}}return false;}export function getQuestion(count,questions){for(var i=0;i<questions.length;i++){if(questions[i].count===count){return questions[i];}}return questions[0];}export function updateQuestions(questions,question){subUpQuestion(question);var index=question.count-1;questions[index]=question;return questions;}export function CompareOptions(options_A,options_B){return options_A.length===options_B.length;}export function subUpQuestion(_x5){return _subUpQuestion.apply(this,arguments);}function _subUpQuestion(){_subUpQuestion=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5(question){return _regeneratorRuntime().wrap(function _callee5$(_context5){while(1)switch(_context5.prev=_context5.next){case 0:_context5.next=2;return fetch(\"/question\",{method:\"PUT\",body:JSON.stringify({question_id:question.id,content:question.content,options:question.options})});case 2:case\"end\":return _context5.stop();}},_callee5);}));return _subUpQuestion.apply(this,arguments);}export function UpQuiz(_x6,_x7){return _UpQuiz.apply(this,arguments);}function _UpQuiz(){_UpQuiz=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee6(input,id){return _regeneratorRuntime().wrap(function _callee6$(_context6){while(1)switch(_context6.prev=_context6.next){case 0:if(!id){_context6.next=3;break;}_context6.next=3;return fetch(\"/new\",{method:\"PUT\",body:JSON.stringify({name:input,quiz_id:id})});case 3:case\"end\":return _context6.stop();}},_callee6);}));return _UpQuiz.apply(this,arguments);}export var logout=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var csrftoken,headers;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:csrftoken=getCookie('csrftoken');headers=new Headers();headers.append('X-CSRFToken',csrftoken);fetch(\"http://127.0.0.1:8000/logout\",{method:'POST',headers:headers,credentials:'include'});case 4:case\"end\":return _context.stop();}},_callee);}));return function logout(){return _ref.apply(this,arguments);};}();","map":{"version":3,"names":["getCookie","makeid","length","chars","split","Math","floor","random","str","i","remove","list","id","filter","item","getQuizs","_getQuizs","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","quizs","wrap","_callee2$","_context2","prev","next","fetch","then","response","json","result","abrupt","stop","subQuiz","_x","_subQuiz","_callee3","input","_callee3$","_context3","method","body","JSON","stringify","quiz_id","subQuestion","_x2","_x3","_x4","_subQuestion","_callee4","optionsToSub","question_id","_callee4$","_context4","undefined","isOnlySpace","trim","isSelect","option","correct","getQuestion","count","questions","updateQuestions","question","subUpQuestion","index","CompareOptions","options_A","options_B","_x5","_subUpQuestion","_callee5","_callee5$","_context5","content","options","UpQuiz","_x6","_x7","_UpQuiz","_callee6","_callee6$","_context6","name","logout","_ref","_callee","csrftoken","headers","_callee$","_context","Headers","append","credentials"],"sources":["C:/Users/youne/Desktop/Brograming/WEB/Learning/FinalProject/quizblast/my-app/src/components/ts/staticFunctions.ts"],"sourcesContent":["import { getCookie } from \"./components/csrf\";\r\n\r\n// interfaces\r\ninterface Quiz{\r\n    id:number,\r\n    username:string,\r\n    name:string,\r\n}\r\ninterface Option {\r\n    id: string,\r\n    text: string,\r\n    correct: boolean,\r\n}\r\ninterface Question {\r\n    count: number,\r\n    quiz_id: number,\r\n    id: number | undefined,\r\n    content: string,\r\n    options: Option[],\r\n}\r\ninterface optionSub{\r\n    text: string;\r\n    correct: boolean;\r\n}\r\nexport function makeid(length: number) {\r\n    let chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXTZabcdefghiklmnopqrstuvwxyz'.split('');\r\n\r\n    if (! length) {\r\n        length = Math.floor(Math.random() * chars.length);\r\n    }\r\n\r\n    let str = '';\r\n    for (var i = 0; i < length; i++) {\r\n        str += chars[Math.floor(Math.random() * chars.length)];\r\n    }\r\n    return str;\r\n}\r\nexport function remove(list: any[], id: any): any[]{\r\n    return list.filter((item)=>item.id !== id)\r\n}\r\n\r\nexport async function getQuizs():Promise<Quiz[]>{\r\n    let quizs:any =\"\"\r\n    await fetch(\"/quiz\")\r\n    .then(response =>{\r\n        return response.json()\r\n    })\r\n    .then((result)=>{\r\n        quizs = result\r\n    })\r\n    return quizs;\r\n}\r\nexport async function subQuiz(input:string):Promise<number>{\r\n    let id:any=\"\"\r\n    await fetch(\"/new\",{\r\n        method: \"POST\",\r\n        body: JSON.stringify({\r\n            \"name\": input\r\n        })\r\n    })\r\n    .then((response)=>response.json())\r\n    .then(result=>\r\n        id = result.quiz_id\r\n    )\r\n    return id\r\n}\r\n\r\nexport async function subQuestion(quiz_id:number, input:string, optionsToSub:optionSub[]){\r\n    let question_id : number | undefined = undefined\r\n    if (optionsToSub.length > 0 && input !== \"\"){\r\n        await fetch(\"/question\",{\r\n                method: \"POST\",\r\n                body: JSON.stringify({\r\n                    \"quiz_id\": quiz_id,\r\n                    \"content\": input,\r\n                    \"option\": optionsToSub,\r\n                })\r\n            })\r\n            .then((response)=>response.json())\r\n            .then(result=>\r\n                question_id = result.question_id\r\n            )\r\n            return question_id\r\n    }\r\n}\r\nexport function isOnlySpace(input: string): boolean {\r\n    return !input.trim().length ? false : true\r\n}\r\nexport function isSelect(option:Option[]):boolean {\r\n    for (let i = 0; i < option.length; i++) {\r\n        if(option[i].correct){\r\n            return true\r\n        }\r\n    }\r\n    return false\r\n}\r\nexport function getQuestion(count:number,questions: Question[]):Question{\r\n    for(let i = 0; i < questions.length; i++) {\r\n        if(questions[i].count === count){\r\n            return questions[i]\r\n        }\r\n    }\r\n    return questions[0]\r\n}\r\n\r\nexport function updateQuestions(questions: Question[], question: Question): Question[]{\r\n    subUpQuestion(question)\r\n    let index = question.count-1\r\n    questions[index] = question\r\n    return questions\r\n}\r\n\r\nexport function CompareOptions(options_A: Option[], options_B: Option[]): boolean{\r\n    return options_A.length === options_B.length\r\n}\r\nexport async function subUpQuestion(question: Question){\r\n    await fetch(\"/question\",{\r\n        method:\"PUT\",\r\n        body: JSON.stringify({\r\n            question_id: question.id,\r\n            content: question.content,\r\n            options: question.options\r\n        })\r\n    })\r\n}\r\nexport async function UpQuiz(input:string, id:number|undefined){\r\n    if(id)\r\n    await fetch(\"/new\",{\r\n        method: \"PUT\",\r\n        body: JSON.stringify({\r\n            name : input,\r\n            quiz_id: id\r\n        })\r\n    })\r\n}\r\nexport const logout = async () => {\r\n    const csrftoken = getCookie('csrftoken');\r\n    let headers = new Headers();\r\n    headers.append('X-CSRFToken', csrftoken);\r\n    fetch(\"http://127.0.0.1:8000/logout\", {\r\n        method: 'POST',\r\n        headers: headers,\r\n        credentials: 'include'\r\n    })\r\n}"],"mappings":"oVAAA,OAASA,SAAS,KAAQ,mBAAmB,CAE7C;AAsBA,MAAO,SAAS,CAAAC,MAAMA,CAACC,MAAc,CAAE,CACnC,GAAI,CAAAC,KAAK,CAAG,+DAA+D,CAACC,KAAK,CAAC,EAAE,CAAC,CAErF,GAAI,CAAEF,MAAM,CAAE,CACVA,MAAM,CAAGG,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,CAAGJ,KAAK,CAACD,MAAM,CAAC,CACrD,CAEA,GAAI,CAAAM,GAAG,CAAG,EAAE,CACZ,IAAK,GAAI,CAAAC,CAAC,CAAG,CAAC,CAAEA,CAAC,CAAGP,MAAM,CAAEO,CAAC,EAAE,CAAE,CAC7BD,GAAG,EAAIL,KAAK,CAACE,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,CAAGJ,KAAK,CAACD,MAAM,CAAC,CAAC,CAC1D,CACA,MAAO,CAAAM,GAAG,CACd,CACA,MAAO,SAAS,CAAAE,MAAMA,CAACC,IAAW,CAAEC,EAAO,CAAQ,CAC/C,MAAO,CAAAD,IAAI,CAACE,MAAM,CAAC,SAACC,IAAI,QAAG,CAAAA,IAAI,CAACF,EAAE,GAAKA,EAAE,GAAC,CAC9C,CAEA,eAAsB,CAAAG,QAAQA,CAAA,SAAAC,SAAA,CAAAC,KAAA,MAAAC,SAAA,GAU7B,SAAAF,UAAA,EAAAA,SAAA,CAAAG,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAVM,SAAAC,SAAA,MAAAC,KAAA,QAAAH,mBAAA,GAAAI,IAAA,UAAAC,UAAAC,SAAA,iBAAAA,SAAA,CAAAC,IAAA,CAAAD,SAAA,CAAAE,IAAA,SACCL,KAAS,CAAE,EAAE,CAAAG,SAAA,CAAAE,IAAA,SACX,CAAAC,KAAK,CAAC,OAAO,CAAC,CACnBC,IAAI,CAAC,SAAAC,QAAQ,CAAG,CACb,MAAO,CAAAA,QAAQ,CAACC,IAAI,EAAE,CAC1B,CAAC,CAAC,CACDF,IAAI,CAAC,SAACG,MAAM,CAAG,CACZV,KAAK,CAAGU,MAAM,CAClB,CAAC,CAAC,eAAAP,SAAA,CAAAQ,MAAA,UACKX,KAAK,0BAAAG,SAAA,CAAAS,IAAA,MAAAb,QAAA,GACf,UAAAN,SAAA,CAAAC,KAAA,MAAAC,SAAA,GACD,eAAsB,CAAAkB,OAAOA,CAAAC,EAAA,SAAAC,QAAA,CAAArB,KAAA,MAAAC,SAAA,GAa5B,SAAAoB,SAAA,EAAAA,QAAA,CAAAnB,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAbM,SAAAkB,SAAuBC,KAAY,MAAA5B,EAAA,QAAAQ,mBAAA,GAAAI,IAAA,UAAAiB,UAAAC,SAAA,iBAAAA,SAAA,CAAAf,IAAA,CAAAe,SAAA,CAAAd,IAAA,SAClChB,EAAM,CAAC,EAAE,CAAA8B,SAAA,CAAAd,IAAA,SACP,CAAAC,KAAK,CAAC,MAAM,CAAC,CACfc,MAAM,CAAE,MAAM,CACdC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CACjB,MAAM,CAAEN,KACZ,CAAC,CACL,CAAC,CAAC,CACDV,IAAI,CAAC,SAACC,QAAQ,QAAG,CAAAA,QAAQ,CAACC,IAAI,EAAE,GAAC,CACjCF,IAAI,CAAC,SAAAG,MAAM,QACR,CAAArB,EAAE,CAAGqB,MAAM,CAACc,OAAO,GACtB,eAAAL,SAAA,CAAAR,MAAA,UACMtB,EAAE,0BAAA8B,SAAA,CAAAP,IAAA,MAAAI,QAAA,GACZ,UAAAD,QAAA,CAAArB,KAAA,MAAAC,SAAA,GAED,eAAsB,CAAA8B,WAAWA,CAAAC,GAAA,CAAAC,GAAA,CAAAC,GAAA,SAAAC,YAAA,CAAAnC,KAAA,MAAAC,SAAA,GAiBhC,SAAAkC,aAAA,EAAAA,YAAA,CAAAjC,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAjBM,SAAAgC,SAA2BN,OAAc,CAAEP,KAAY,CAAEc,YAAwB,MAAAC,WAAA,QAAAnC,mBAAA,GAAAI,IAAA,UAAAgC,UAAAC,SAAA,iBAAAA,SAAA,CAAA9B,IAAA,CAAA8B,SAAA,CAAA7B,IAAA,SAChF2B,WAAgC,CAAGG,SAAS,MAC5CJ,YAAY,CAACpD,MAAM,CAAG,CAAC,EAAIsC,KAAK,GAAK,EAAE,GAAAiB,SAAA,CAAA7B,IAAA,UAAA6B,SAAA,CAAA7B,IAAA,SACjC,CAAAC,KAAK,CAAC,WAAW,CAAC,CAChBc,MAAM,CAAE,MAAM,CACdC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CACjB,SAAS,CAAEC,OAAO,CAClB,SAAS,CAAEP,KAAK,CAChB,QAAQ,CAAEc,YACd,CAAC,CACL,CAAC,CAAC,CACDxB,IAAI,CAAC,SAACC,QAAQ,QAAG,CAAAA,QAAQ,CAACC,IAAI,EAAE,GAAC,CACjCF,IAAI,CAAC,SAAAG,MAAM,QACR,CAAAsB,WAAW,CAAGtB,MAAM,CAACsB,WAAW,GACnC,eAAAE,SAAA,CAAAvB,MAAA,UACMqB,WAAW,0BAAAE,SAAA,CAAAtB,IAAA,MAAAkB,QAAA,GAE7B,UAAAD,YAAA,CAAAnC,KAAA,MAAAC,SAAA,GACD,MAAO,SAAS,CAAAyC,WAAWA,CAACnB,KAAa,CAAW,CAChD,MAAO,CAACA,KAAK,CAACoB,IAAI,EAAE,CAAC1D,MAAM,CAAG,KAAK,CAAG,IAAI,CAC9C,CACA,MAAO,SAAS,CAAA2D,QAAQA,CAACC,MAAe,CAAU,CAC9C,IAAK,GAAI,CAAArD,CAAC,CAAG,CAAC,CAAEA,CAAC,CAAGqD,MAAM,CAAC5D,MAAM,CAAEO,CAAC,EAAE,CAAE,CACpC,GAAGqD,MAAM,CAACrD,CAAC,CAAC,CAACsD,OAAO,CAAC,CACjB,MAAO,KAAI,CACf,CACJ,CACA,MAAO,MAAK,CAChB,CACA,MAAO,SAAS,CAAAC,WAAWA,CAACC,KAAY,CAACC,SAAqB,CAAU,CACpE,IAAI,GAAI,CAAAzD,CAAC,CAAG,CAAC,CAAEA,CAAC,CAAGyD,SAAS,CAAChE,MAAM,CAAEO,CAAC,EAAE,CAAE,CACtC,GAAGyD,SAAS,CAACzD,CAAC,CAAC,CAACwD,KAAK,GAAKA,KAAK,CAAC,CAC5B,MAAO,CAAAC,SAAS,CAACzD,CAAC,CAAC,CACvB,CACJ,CACA,MAAO,CAAAyD,SAAS,CAAC,CAAC,CAAC,CACvB,CAEA,MAAO,SAAS,CAAAC,eAAeA,CAACD,SAAqB,CAAEE,QAAkB,CAAa,CAClFC,aAAa,CAACD,QAAQ,CAAC,CACvB,GAAI,CAAAE,KAAK,CAAGF,QAAQ,CAACH,KAAK,CAAC,CAAC,CAC5BC,SAAS,CAACI,KAAK,CAAC,CAAGF,QAAQ,CAC3B,MAAO,CAAAF,SAAS,CACpB,CAEA,MAAO,SAAS,CAAAK,cAAcA,CAACC,SAAmB,CAAEC,SAAmB,CAAU,CAC7E,MAAO,CAAAD,SAAS,CAACtE,MAAM,GAAKuE,SAAS,CAACvE,MAAM,CAChD,CACA,eAAsB,CAAAmE,aAAaA,CAAAK,GAAA,SAAAC,cAAA,CAAA1D,KAAA,MAAAC,SAAA,GASlC,SAAAyD,eAAA,EAAAA,cAAA,CAAAxD,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CATM,SAAAuD,SAA6BR,QAAkB,SAAAhD,mBAAA,GAAAI,IAAA,UAAAqD,UAAAC,SAAA,iBAAAA,SAAA,CAAAnD,IAAA,CAAAmD,SAAA,CAAAlD,IAAA,SAAAkD,SAAA,CAAAlD,IAAA,SAC5C,CAAAC,KAAK,CAAC,WAAW,CAAC,CACpBc,MAAM,CAAC,KAAK,CACZC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CACjBS,WAAW,CAAEa,QAAQ,CAACxD,EAAE,CACxBmE,OAAO,CAAEX,QAAQ,CAACW,OAAO,CACzBC,OAAO,CAAEZ,QAAQ,CAACY,OACtB,CAAC,CACL,CAAC,CAAC,yBAAAF,SAAA,CAAA3C,IAAA,MAAAyC,QAAA,GACL,UAAAD,cAAA,CAAA1D,KAAA,MAAAC,SAAA,GACD,eAAsB,CAAA+D,MAAMA,CAAAC,GAAA,CAAAC,GAAA,SAAAC,OAAA,CAAAnE,KAAA,MAAAC,SAAA,GAS3B,SAAAkE,QAAA,EAAAA,OAAA,CAAAjE,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CATM,SAAAgE,SAAsB7C,KAAY,CAAE5B,EAAmB,SAAAQ,mBAAA,GAAAI,IAAA,UAAA8D,UAAAC,SAAA,iBAAAA,SAAA,CAAA5D,IAAA,CAAA4D,SAAA,CAAA3D,IAAA,aACvDhB,EAAE,EAAA2E,SAAA,CAAA3D,IAAA,UAAA2D,SAAA,CAAA3D,IAAA,SACC,CAAAC,KAAK,CAAC,MAAM,CAAC,CACfc,MAAM,CAAE,KAAK,CACbC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CACjB0C,IAAI,CAAGhD,KAAK,CACZO,OAAO,CAAEnC,EACb,CAAC,CACL,CAAC,CAAC,yBAAA2E,SAAA,CAAApD,IAAA,MAAAkD,QAAA,GACL,UAAAD,OAAA,CAAAnE,KAAA,MAAAC,SAAA,GACD,MAAO,IAAM,CAAAuE,MAAM,6BAAAC,IAAA,CAAAvE,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAAG,SAAAsE,QAAA,MAAAC,SAAA,CAAAC,OAAA,QAAAzE,mBAAA,GAAAI,IAAA,UAAAsE,SAAAC,QAAA,iBAAAA,QAAA,CAAApE,IAAA,CAAAoE,QAAA,CAAAnE,IAAA,SACZgE,SAAS,CAAG5F,SAAS,CAAC,WAAW,CAAC,CACpC6F,OAAO,CAAG,GAAI,CAAAG,OAAO,EAAE,CAC3BH,OAAO,CAACI,MAAM,CAAC,aAAa,CAAEL,SAAS,CAAC,CACxC/D,KAAK,CAAC,8BAA8B,CAAE,CAClCc,MAAM,CAAE,MAAM,CACdkD,OAAO,CAAEA,OAAO,CAChBK,WAAW,CAAE,SACjB,CAAC,CAAC,yBAAAH,QAAA,CAAA5D,IAAA,MAAAwD,OAAA,GACL,kBATY,CAAAF,MAAMA,CAAA,SAAAC,IAAA,CAAAzE,KAAA,MAAAC,SAAA,OASlB"},"metadata":{},"sourceType":"module","externalDependencies":[]}