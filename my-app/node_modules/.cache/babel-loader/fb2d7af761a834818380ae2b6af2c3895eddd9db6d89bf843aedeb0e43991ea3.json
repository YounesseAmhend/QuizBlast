{"ast":null,"code":"var _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useState, useEffect, useRef } from \"react\";\nexport function useAuth() {\n  _s();\n  const [is_authenticated, setAuthentication] = useState(undefined);\n  const [loaded, setLoaded] = useState(false);\n  const [error, setError] = useState(undefined);\n  useEffect(() => {\n    const isAuthenticateds = async () => {\n      await fetch(\"/auth\", {\n        method: \"GET\"\n      }).then(response => response.json()).then(result => {\n        console.log(result);\n        setAuthentication(result.is_authenticated);\n        setLoaded(true);\n      }).catch(Error => setError(Error));\n    };\n    isAuthenticateds();\n  }, []);\n  return {\n    is_authenticated,\n    loaded,\n    error\n  };\n}\n_s(useAuth, \"AIrO7UsjOKaX0P6riink8D5cvg4=\");\nexport function useFetch(link, init) {\n  _s2();\n  let method = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'GET';\n  let request = arguments.length > 3 ? arguments[3] : undefined;\n  const [data, setData] = useState(init);\n  const [loaded, setLoaded] = useState(false);\n  const [error, setError] = useState(undefined);\n  const getResult = useRef(() => {});\n  if (method === 'GET') {\n    getResult.current = async () => {\n      await fetch(\"http://127.0.0.1:8000\" + link).then(response => {\n        console.log(response);\n        return response.json();\n      }).then(result => {\n        setData(result);\n        setLoaded(true);\n      }).catch(err => setError(err));\n    };\n  } else if (method === 'POST') {\n    getResult.current = async () => {\n      await fetch(\"http://127.0.0.1:8000\" + link, {\n        method: method,\n        body: JSON.stringify(request)\n      }).then(response => {\n        console.log(response);\n        return response.json();\n      }).then(result => {\n        setData(result);\n        setLoaded(true);\n      }).catch(err => setError(err));\n    };\n  }\n  function fetchAgain(body) {\n    setLoaded(false);\n    getResult.current = async () => {\n      await fetch(\"http://127.0.0.1:8000\" + link, {\n        method: method,\n        body: JSON.stringify(body)\n      }).then(response => {\n        console.log(response);\n        return response.json();\n      }).then(result => {\n        if (Array.isArray(data) && Array.isArray(result)) {\n          setData(data => [...data, ...result]);\n          setLoaded(true);\n        }\n      }).catch(err => setError(err));\n    };\n  }\n  useEffect(() => {\n    getResult.current();\n  }, [getResult]);\n  return {\n    data,\n    loaded,\n    error,\n    fetchAgain\n  };\n}\n_s2(useFetch, \"Ugvoo8PkoHUVJKseizRGj0TWUCw=\");","map":{"version":3,"names":["useState","useEffect","useRef","useAuth","_s","is_authenticated","setAuthentication","undefined","loaded","setLoaded","error","setError","isAuthenticateds","fetch","method","then","response","json","result","console","log","catch","Error","useFetch","link","init","_s2","arguments","length","request","data","setData","getResult","current","err","body","JSON","stringify","fetchAgain","Array","isArray"],"sources":["C:/Users/youne/Desktop/Brograming/WEB/Learning/FinalProject/quizblast/my-app/src/components/ts/hooks.ts"],"sourcesContent":["import {useState, useEffect, useRef } from \"react\"\r\n\r\ntype method = 'GET' | 'POST' | 'DELETE' | 'PUT' | 'PATCH'\r\n\r\nexport function useAuth(){\r\n    const [is_authenticated, setAuthentication] = useState<boolean | undefined>(undefined)\r\n    const [loaded, setLoaded] = useState(false)\r\n    const [error, setError] = useState(undefined)\r\n    useEffect(()=>{\r\n            const isAuthenticateds = async () => {\r\n                await fetch(\"/auth\",{\r\n                    method: \"GET\",\r\n                    })\r\n                    .then((response) => response.json())\r\n                    .then((result) => {\r\n                        console.log(result)\r\n                        setAuthentication(result.is_authenticated)\r\n                        setLoaded(true)\r\n                    })\r\n                    .catch((Error)=>setError(Error))\r\n            }\r\n            isAuthenticateds()\r\n        }\r\n    ,[])\r\n    return {is_authenticated, loaded, error}\r\n}\r\n\r\nexport function useFetch<T>(link: string, init?: T, method: method = 'GET', request?: any){\r\n\r\n    const [data,setData] = useState<T | undefined>(init)\r\n    const [loaded, setLoaded] = useState(false)\r\n    const [error, setError] = useState(undefined)\r\n    const getResult = useRef(()=>{})\r\n    if(method === 'GET'){\r\n        getResult.current = async () => {\r\n            await fetch(\"http://127.0.0.1:8000\"+link)\r\n            .then(response =>{\r\n                console.log(response)\r\n                return response.json()\r\n            })\r\n            .then((result)=>{\r\n                setData(result)\r\n                setLoaded(true)\r\n            })\r\n            .catch(err=>setError(err))\r\n        }\r\n    }\r\n    else if(method === 'POST'){\r\n        getResult.current = async () => {\r\n            await fetch(\"http://127.0.0.1:8000\"+link,{\r\n                method: method,\r\n                body: JSON.stringify(request),\r\n            })\r\n            .then(response =>{\r\n                console.log(response)\r\n                return response.json()\r\n            })\r\n            .then((result)=>{\r\n                setData(result)\r\n                setLoaded(true)\r\n            })\r\n            .catch(err=>setError(err))\r\n        }\r\n    }\r\n    function fetchAgain(body?: any){\r\n        setLoaded(false)\r\n        getResult.current = async () => {\r\n            await fetch(\"http://127.0.0.1:8000\"+link,{\r\n                method: method,\r\n                body: JSON.stringify(body),\r\n            })\r\n            .then(response =>{\r\n                console.log(response)\r\n                return response.json()\r\n            })\r\n            .then((result : T)=>{\r\n                if(Array.isArray(data) && Array.isArray(result)){\r\n                    setData<any[]>((data:any[])=>[...data, ...result])\r\n                    setLoaded(true)\r\n                }\r\n            })\r\n            .catch(err=>setError(err))\r\n        }\r\n    }\r\n    useEffect(()=>{\r\n            getResult.current();\r\n        }\r\n    ,[getResult])\r\n    return {data, loaded, error, fetchAgain}\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}