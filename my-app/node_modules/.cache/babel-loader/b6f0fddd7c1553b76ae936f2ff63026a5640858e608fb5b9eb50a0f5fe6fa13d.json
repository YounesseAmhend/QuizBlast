{"ast":null,"code":"import _slicedToArray from\"C:/Users/youne/Desktop/Brograming/WEB/Learning/FinalProject/quizblast/my-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{CircularProgressbarWithChildren}from'react-circular-progressbar';// import { sleep } from '../../ts/staticFunctions';\n// import { easeQuadInOut } from 'd3-ease';\n// import AnimatedProgressProvider from './AnimatedProgressProvider';\nimport MoreBtn from'./components/MoreBtn';import'react-circular-progressbar/dist/styles.css';import{useState,useEffect,useMemo}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export default function QuizResult(props){var visible=props.visible,score=props.score,correctQuestions=props.correctQuestions,questionLength=props.questionLength,quizname=props.quizname,result=props.result;var _useState=useState(0),_useState2=_slicedToArray(_useState,2),animatedValue=_useState2[0],setAnimatedValue=_useState2[1];useEffect(function(){if(visible){var timer=setTimeout(function(){if(animatedValue<correctQuestions)setAnimatedValue(function(old){return parseFloat((old+correctQuestions/100).toFixed(2));});},10);return function(){return clearTimeout(timer);};}},[visible,animatedValue]);useMemo(function(){console.log(result);},[visible]);return/*#__PURE__*/_jsx(_Fragment,{children:visible&&/*#__PURE__*/_jsx(\"div\",{className:\"flex justify-center\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex-col w-4/5 page-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-center text-xl font-semibold pt-3\",children:quizname}),/*#__PURE__*/_jsx(\"div\",{className:\"flex justify-center\",children:/*#__PURE__*/_jsx(\"div\",{className:\"w-48 h-48 mt-6 mb-4\",children:/*#__PURE__*/_jsx(CircularProgressbarWithChildren,{maxValue:questionLength,value:animatedValue,styles:{trail:{color:\"rgb(2 132 199)\"}},children:/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"text-4xl font-extrabold text-sky-600 text-center\",children:[Math.round(animatedValue),\"/\",questionLength]}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-sm text-center\",children:[Math.round(animatedValue*score/correctQuestions)||0,\" points\"]})]})})})}),/*#__PURE__*/_jsx(MoreBtn,{result:result})]})})});}","map":{"version":3,"names":["CircularProgressbarWithChildren","MoreBtn","useState","useEffect","useMemo","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","QuizResult","props","visible","score","correctQuestions","questionLength","quizname","result","_useState","_useState2","_slicedToArray","animatedValue","setAnimatedValue","timer","setTimeout","old","parseFloat","toFixed","clearTimeout","console","log","children","className","maxValue","value","styles","trail","color","Math","round"],"sources":["C:/Users/youne/Desktop/Brograming/WEB/Learning/FinalProject/quizblast/my-app/src/components/QuizView/Pages/QuizResult.tsx"],"sourcesContent":["import { CircularProgressbarWithChildren } from 'react-circular-progressbar';\r\n// import { sleep } from '../../ts/staticFunctions';\r\n// import { easeQuadInOut } from 'd3-ease';\r\n// import AnimatedProgressProvider from './AnimatedProgressProvider';\r\nimport MoreBtn from './components/MoreBtn';\r\nimport 'react-circular-progressbar/dist/styles.css';\r\nimport { useState, useEffect, useMemo } from 'react';\r\n\r\ninterface Results{\r\n    count:number;\r\n    Quesiton:string;\r\n    answer:string;\r\n    correct: boolean;\r\n    correctAnswer:string;\r\n    quote?:string;\r\n}\r\ninterface Props{\r\n    visible: boolean;\r\n    score: number;\r\n    correctQuestions:number;\r\n    questionLength:number | undefined;\r\n    quizname:string | undefined;\r\n    result?:Results[];\r\n}\r\n\r\nexport default function QuizResult(props: Props){\r\n    const { visible, score, correctQuestions, questionLength, quizname, result } = props;\r\n    const [animatedValue, setAnimatedValue] = useState<number>(0);\r\n\r\n    useEffect(() => {\r\n        if (visible) {\r\n            let timer = setTimeout(() => {\r\n                if(animatedValue < correctQuestions)\r\n                setAnimatedValue((old)=>{\r\n                    return parseFloat((old+(correctQuestions/100)).toFixed(2));\r\n                    \r\n                });\r\n                \r\n            }, 10)\r\n            return () => clearTimeout(timer);\r\n        }\r\n    }, [visible, animatedValue]);\r\n    useMemo(()=>{\r\n        console.log(result)\r\n    },[visible])\r\n    return (\r\n        <>\r\n            {visible && \r\n                <div className=\"flex justify-center\">\r\n                     <div className=\"flex-col w-4/5 page-container\">\r\n                        <div className=\"text-center text-xl font-semibold pt-3\">{quizname}</div>\r\n                        <div className=\"flex justify-center\">\r\n                            <div className='w-48 h-48 mt-6 mb-4'>\r\n                                <CircularProgressbarWithChildren\r\n                                    maxValue={questionLength}\r\n                                    value={animatedValue}\r\n                                    styles={{\r\n                                        trail:{\r\n                                            color: \"rgb(2 132 199)\",\r\n                                        }\r\n                                    }}\r\n                                >\r\n                                    <>\r\n                                        <div className=\"text-4xl font-extrabold text-sky-600 text-center\">{Math.round(animatedValue)}/{questionLength}</div>\r\n                                        <div className=\"text-sm text-center\">{Math.round(animatedValue*score/correctQuestions)||0} points</div>\r\n                                    </>\r\n                                </CircularProgressbarWithChildren>\r\n                            </div>\r\n                        </div>\r\n                        <MoreBtn result={result}/>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </>\r\n    );\r\n}\r\n"],"mappings":"kKAAA,OAASA,+BAA+B,KAAQ,4BAA4B,CAC5E;AACA;AACA;AACA,MAAO,CAAAC,OAAO,KAAM,sBAAsB,CAC1C,MAAO,4CAA4C,CACnD,OAASC,QAAQ,CAAEC,SAAS,CAAEC,OAAO,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,gCAAAC,QAAA,IAAAC,SAAA,yBAmBrD,cAAe,SAAS,CAAAC,UAAUA,CAACC,KAAY,CAAC,CAC5C,GAAQ,CAAAC,OAAO,CAAgED,KAAK,CAA5EC,OAAO,CAAEC,KAAK,CAAyDF,KAAK,CAAnEE,KAAK,CAAEC,gBAAgB,CAAuCH,KAAK,CAA5DG,gBAAgB,CAAEC,cAAc,CAAuBJ,KAAK,CAA1CI,cAAc,CAAEC,QAAQ,CAAaL,KAAK,CAA1BK,QAAQ,CAAEC,MAAM,CAAKN,KAAK,CAAhBM,MAAM,CAC1E,IAAAC,SAAA,CAA0CjB,QAAQ,CAAS,CAAC,CAAC,CAAAkB,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAAtDG,aAAa,CAAAF,UAAA,IAAEG,gBAAgB,CAAAH,UAAA,IAEtCjB,SAAS,CAAC,UAAM,CACZ,GAAIU,OAAO,CAAE,CACT,GAAI,CAAAW,KAAK,CAAGC,UAAU,CAAC,UAAM,CACzB,GAAGH,aAAa,CAAGP,gBAAgB,CACnCQ,gBAAgB,CAAC,SAACG,GAAG,CAAG,CACpB,MAAO,CAAAC,UAAU,CAAC,CAACD,GAAG,CAAEX,gBAAgB,CAAC,GAAI,EAAEa,OAAO,CAAC,CAAC,CAAC,CAAC,CAE9D,CAAC,CAAC,CAEN,CAAC,CAAE,EAAE,CAAC,CACN,MAAO,kBAAM,CAAAC,YAAY,CAACL,KAAK,CAAC,GACpC,CACJ,CAAC,CAAE,CAACX,OAAO,CAAES,aAAa,CAAC,CAAC,CAC5BlB,OAAO,CAAC,UAAI,CACR0B,OAAO,CAACC,GAAG,CAACb,MAAM,CAAC,CACvB,CAAC,CAAC,CAACL,OAAO,CAAC,CAAC,CACZ,mBACIP,IAAA,CAAAI,SAAA,EAAAsB,QAAA,CACKnB,OAAO,eACJP,IAAA,QAAK2B,SAAS,CAAC,qBAAqB,CAAAD,QAAA,cAC/BxB,KAAA,QAAKyB,SAAS,CAAC,+BAA+B,CAAAD,QAAA,eAC3C1B,IAAA,QAAK2B,SAAS,CAAC,wCAAwC,CAAAD,QAAA,CAAEf,QAAQ,EAAO,cACxEX,IAAA,QAAK2B,SAAS,CAAC,qBAAqB,CAAAD,QAAA,cAChC1B,IAAA,QAAK2B,SAAS,CAAC,qBAAqB,CAAAD,QAAA,cAChC1B,IAAA,CAACN,+BAA+B,EAC5BkC,QAAQ,CAAElB,cAAe,CACzBmB,KAAK,CAAEb,aAAc,CACrBc,MAAM,CAAE,CACJC,KAAK,CAAC,CACFC,KAAK,CAAE,gBACX,CACJ,CAAE,CAAAN,QAAA,cAEFxB,KAAA,CAAAE,SAAA,EAAAsB,QAAA,eACIxB,KAAA,QAAKyB,SAAS,CAAC,kDAAkD,CAAAD,QAAA,EAAEO,IAAI,CAACC,KAAK,CAAClB,aAAa,CAAC,CAAC,GAAC,CAACN,cAAc,GAAO,cACpHR,KAAA,QAAKyB,SAAS,CAAC,qBAAqB,CAAAD,QAAA,EAAEO,IAAI,CAACC,KAAK,CAAClB,aAAa,CAACR,KAAK,CAACC,gBAAgB,CAAC,EAAE,CAAC,CAAC,SAAO,GAAM,GACxG,EAC2B,EAChC,EACJ,cACNT,IAAA,CAACL,OAAO,EAACiB,MAAM,CAAEA,MAAO,EAAE,GACxB,EACJ,EAEX,CAEX"},"metadata":{},"sourceType":"module","externalDependencies":[]}