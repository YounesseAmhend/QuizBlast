{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\youne\\\\Desktop\\\\Brograming\\\\WEB\\\\Learning\\\\FinalProject\\\\quizblast\\\\my-app\\\\src\\\\components\\\\QuizView\\\\Quizview.tsx\",\n  _s = $RefreshSig$();\nimport { useFetch } from \"../ts/hooks\";\nimport Quiz from \"./Quiz\";\nimport Loading from \"../ts/components/loading\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Home(props) {\n  _s();\n  const {\n    data: quizs,\n    loaded\n  } = useFetch(\"/quiz\", []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Loading, {\n      loaded: loaded\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      onScroll: fetchMore,\n      className: \"quiz-container\",\n      children: quizs === null || quizs === void 0 ? void 0 : quizs.map(function (quiz) {\n        return /*#__PURE__*/_jsxDEV(Quiz, {\n          goView: props.goView,\n          setId: props.setId,\n          id: quiz.id,\n          username: quiz.username,\n          name: quiz.name\n        }, quiz.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(Home, \"zJzOyeTrKz9/Cx/4dILeN22w1iM=\", false, function () {\n  return [useFetch];\n});\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["useFetch","Quiz","Loading","jsxDEV","_jsxDEV","Fragment","_Fragment","Home","props","_s","data","quizs","loaded","children","fileName","_jsxFileName","lineNumber","columnNumber","onScroll","fetchMore","className","map","quiz","goView","setId","id","username","name","_c","$RefreshReg$"],"sources":["C:/Users/youne/Desktop/Brograming/WEB/Learning/FinalProject/quizblast/my-app/src/components/QuizView/Quizview.tsx"],"sourcesContent":["import { useFetch } from \"../ts/hooks\";\r\nimport Quiz from \"./Quiz\";\r\nimport Loading from \"../ts/components/loading\";\r\n\r\ninterface Props {\r\n    goView(): void,\r\n    setId(par: number): void,\r\n}\r\nexport default function Home(props: Props) {\r\n    interface Quiz {\r\n        id: number;\r\n        username: string;\r\n        name: string;\r\n    }\r\n    const { data: quizs, loaded } = useFetch<Quiz[]>(\"/quiz\", [])\r\n    return (\r\n        <>\r\n            <Loading loaded={loaded} />\r\n            <div onScroll={fetchMore} className=\"quiz-container\">\r\n                {quizs?.map(function (quiz: Quiz) {\r\n                    return (\r\n                        <Quiz goView={props.goView} setId={props.setId} key={quiz.id} id={quiz.id} username={quiz.username} name={quiz.name} />\r\n                    )\r\n                })}\r\n            </div>\r\n        </>\r\n    )\r\n}"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,aAAa;AACtC,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,OAAO,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAM/C,eAAe,SAASC,IAAIA,CAACC,KAAY,EAAE;EAAAC,EAAA;EAMvC,MAAM;IAAEC,IAAI,EAAEC,KAAK;IAAEC;EAAO,CAAC,GAAGZ,QAAQ,CAAS,OAAO,EAAE,EAAE,CAAC;EAC7D,oBACII,OAAA,CAAAE,SAAA;IAAAO,QAAA,gBACIT,OAAA,CAACF,OAAO;MAACU,MAAM,EAAEA;IAAO;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eAC3Bb,OAAA;MAAKc,QAAQ,EAAEC,SAAU;MAACC,SAAS,EAAC,gBAAgB;MAAAP,QAAA,EAC/CF,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEU,GAAG,CAAC,UAAUC,IAAU,EAAE;QAC9B,oBACIlB,OAAA,CAACH,IAAI;UAACsB,MAAM,EAAEf,KAAK,CAACe,MAAO;UAACC,KAAK,EAAEhB,KAAK,CAACgB,KAAM;UAAeC,EAAE,EAAEH,IAAI,CAACG,EAAG;UAACC,QAAQ,EAAEJ,IAAI,CAACI,QAAS;UAACC,IAAI,EAAEL,IAAI,CAACK;QAAK,GAA/DL,IAAI,CAACG,EAAE;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAA2D;MAE/H,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACA;EAAA,gBACP;AAEX;AAACR,EAAA,CAnBuBF,IAAI;EAAA,QAMQP,QAAQ;AAAA;AAAA4B,EAAA,GANpBrB,IAAI;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}