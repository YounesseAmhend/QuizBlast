{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\youne\\\\Desktop\\\\Brograming\\\\WEB\\\\Learning\\\\FinalProject\\\\quizblast\\\\my-app\\\\src\\\\components\\\\QuizView\\\\Pages\\\\AnimatedProgressProvider.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Animate } from \"react-move\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AnimatedProgressProvider = props => {\n  _s();\n  const {\n    repeat,\n    valueStart = 0,\n    valueEnd,\n    easingFunction,\n    children,\n    duration,\n    ...rest\n  } = props;\n  const [isAnimated, setIsAnimated] = useState(false);\n  useEffect(() => {\n    let interval;\n    if (repeat) {\n      interval = setInterval(() => {\n        setIsAnimated(!isAnimated);\n      }, duration * 1000);\n    } else {\n      setIsAnimated(!isAnimated);\n    }\n    return () => {\n      clearInterval(interval);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Animate, {\n    start: {\n      value: valueStart\n    },\n    update: () => ({\n      value: [isAnimated ? valueEnd : valueStart],\n      timing: {\n        duration: duration * 1000,\n        ease: easingFunction\n      }\n    }),\n    ...rest,\n    children: _ref => {\n      let {\n        value\n      } = _ref;\n      return children(value);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(AnimatedProgressProvider, \"feZijyaiImu/vOPW5rezAaNy5lI=\");\n_c = AnimatedProgressProvider;\nexport default AnimatedProgressProvider;\nvar _c;\n$RefreshReg$(_c, \"AnimatedProgressProvider\");","map":{"version":3,"names":["React","useEffect","useState","Animate","jsxDEV","_jsxDEV","AnimatedProgressProvider","props","_s","repeat","valueStart","valueEnd","easingFunction","children","duration","rest","isAnimated","setIsAnimated","interval","setInterval","clearInterval","start","value","update","timing","ease","_ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/youne/Desktop/Brograming/WEB/Learning/FinalProject/quizblast/my-app/src/components/QuizView/Pages/AnimatedProgressProvider.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Animate } from \"react-move\";\r\n\r\ntype GetInterpolator = (begValue?: any, endValue?: any, attr?: string, namespace?: string) => (t: number) => any;\r\n\r\nexport interface HashMap {\r\n  [key: string]: any;\r\n}\r\n\r\ninterface IAnimateProps {\r\n  show?: boolean;\r\n  interpolation?: GetInterpolator;\r\n  start: any;\r\n  enter?: any;\r\n  update?: any;\r\n  leave?: any;\r\n  children: (state: HashMap) => React.ReactElement<any>;\r\n}\r\n\r\ninterface Props extends Omit<IAnimateProps, \"children\" | \"start\" | \"update\"> {\r\n  repeat?: boolean;\r\n  valueStart?: number;\r\n  valueEnd: number;\r\n  easingFunction: (n: number) => number;\r\n  children: (value: number) => React.ReactElement<any, string | React.JSXElementConstructor<any>>;\r\n  duration: number;\r\n}\r\n\r\nconst AnimatedProgressProvider = (props: Props) => {\r\n  const { repeat, valueStart = 0, valueEnd, easingFunction, children, duration, ...rest } = props;\r\n  const [isAnimated, setIsAnimated] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let interval: NodeJS.Timeout | undefined;\r\n    if (repeat) {\r\n      interval = setInterval(() => {\r\n        setIsAnimated(!isAnimated);\r\n      }, duration * 1000);\r\n    } else {\r\n      setIsAnimated(!isAnimated);\r\n    }\r\n    return () => {\r\n      clearInterval(interval);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <Animate\r\n      start={{ value: valueStart }}\r\n      update={() => ({\r\n        value: [isAnimated ? valueEnd : valueStart],\r\n        timing: {\r\n          duration: duration * 1000,\r\n          ease: easingFunction\r\n        }\r\n      })}\r\n      {...rest}\r\n    >\r\n      {({ value }) => children(value)}\r\n    </Animate>\r\n  );\r\n};\r\n\r\nexport default AnimatedProgressProvider;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,OAAO,QAAQ,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AA2BrC,MAAMC,wBAAwB,GAAIC,KAAY,IAAK;EAAAC,EAAA;EACjD,MAAM;IAAEC,MAAM;IAAEC,UAAU,GAAG,CAAC;IAAEC,QAAQ;IAAEC,cAAc;IAAEC,QAAQ;IAAEC,QAAQ;IAAE,GAAGC;EAAK,CAAC,GAAGR,KAAK;EAC/F,MAAM,CAACS,UAAU,EAAEC,aAAa,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EAEnDD,SAAS,CAAC,MAAM;IACd,IAAIiB,QAAoC;IACxC,IAAIT,MAAM,EAAE;MACVS,QAAQ,GAAGC,WAAW,CAAC,MAAM;QAC3BF,aAAa,CAAC,CAACD,UAAU,CAAC;MAC5B,CAAC,EAAEF,QAAQ,GAAG,IAAI,CAAC;IACrB,CAAC,MAAM;MACLG,aAAa,CAAC,CAACD,UAAU,CAAC;IAC5B;IACA,OAAO,MAAM;MACXI,aAAa,CAACF,QAAQ,CAAC;IACzB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEb,OAAA,CAACF,OAAO;IACNkB,KAAK,EAAE;MAAEC,KAAK,EAAEZ;IAAW,CAAE;IAC7Ba,MAAM,EAAEA,CAAA,MAAO;MACbD,KAAK,EAAE,CAACN,UAAU,GAAGL,QAAQ,GAAGD,UAAU,CAAC;MAC3Cc,MAAM,EAAE;QACNV,QAAQ,EAAEA,QAAQ,GAAG,IAAI;QACzBW,IAAI,EAAEb;MACR;IACF,CAAC,CAAE;IAAA,GACCG,IAAI;IAAAF,QAAA,EAEPa,IAAA;MAAA,IAAC;QAAEJ;MAAM,CAAC,GAAAI,IAAA;MAAA,OAAKb,QAAQ,CAACS,KAAK,CAAC;IAAA;EAAA;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACvB;AAEd,CAAC;AAACtB,EAAA,CAjCIF,wBAAwB;AAAAyB,EAAA,GAAxBzB,wBAAwB;AAmC9B,eAAeA,wBAAwB;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}