{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\youne\\\\Desktop\\\\Brograming\\\\WEB\\\\Learning\\\\FinalProject\\\\quizblast\\\\my-app\\\\src\\\\components\\\\QuizView\\\\Pages\\\\QuizPage.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport Options from \"./components/Options\";\nimport Title from \"./components/Title\";\nimport Quote from \"./components/Quote\";\nimport Header from \"./components/Header\";\nimport NextBtn from \"./components/NextBtn\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function QuizPage(props) {\n  _s();\n  var _Quiz$questions, _Quiz$questions2, _Quiz$questions3;\n  const {\n    visible,\n    Quiz,\n    setVisible\n  } = props;\n  const [chosed, setChosed] = useState(false);\n  const [pageCount, setPageCount] = useState(1);\n  const [score, setScore] = useState(0);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: visible && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"page-container\",\n        className: \"w-4/5 page-container\",\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          quizname: Quiz === null || Quiz === void 0 ? void 0 : Quiz.quiz.name,\n          pageCount: pageCount,\n          score: score,\n          questionLength: Quiz === null || Quiz === void 0 ? void 0 : Quiz.questions.length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Title, {\n          title: Quiz === null || Quiz === void 0 ? void 0 : (_Quiz$questions = Quiz.questions[pageCount - 1]) === null || _Quiz$questions === void 0 ? void 0 : _Quiz$questions.question.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Options, {\n          options: Quiz === null || Quiz === void 0 ? void 0 : (_Quiz$questions2 = Quiz.questions[pageCount - 1]) === null || _Quiz$questions2 === void 0 ? void 0 : _Quiz$questions2.options\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Quote, {\n          text: Quiz === null || Quiz === void 0 ? void 0 : (_Quiz$questions3 = Quiz.questions[pageCount - 1]) === null || _Quiz$questions3 === void 0 ? void 0 : _Quiz$questions3.question.quote\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(NextBtn, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n}\n_s(QuizPage, \"O3s/vqtTfXYm9AfHwCp68mzJSM8=\");\n_c = QuizPage;\nvar _c;\n$RefreshReg$(_c, \"QuizPage\");","map":{"version":3,"names":["useState","Options","Title","Quote","Header","NextBtn","jsxDEV","_jsxDEV","Fragment","_Fragment","QuizPage","props","_s","_Quiz$questions","_Quiz$questions2","_Quiz$questions3","visible","Quiz","setVisible","chosed","setChosed","pageCount","setPageCount","score","setScore","children","className","id","quizname","quiz","name","questionLength","questions","length","fileName","_jsxFileName","lineNumber","columnNumber","title","question","content","options","text","quote","_c","$RefreshReg$"],"sources":["C:/Users/youne/Desktop/Brograming/WEB/Learning/FinalProject/quizblast/my-app/src/components/QuizView/Pages/QuizPage.tsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport Options from \"./components/Options\";\r\nimport Title from \"./components/Title\";\r\nimport Quote from \"./components/Quote\";\r\nimport Header from \"./components/Header\";\r\nimport NextBtn from \"./components/NextBtn\";\r\n\r\ninterface Option {\r\n    id: number;\r\n    content: string;\r\n    correct: boolean;\r\n}\r\ninterface Quiz {\r\n    id: number;\r\n    name: string;\r\n    username: string;\r\n}\r\ninterface Question {\r\n    count: number,\r\n    quiz_id: number,\r\n    id: number | undefined,\r\n    content: string,\r\n    options: Option[],\r\n    quote: string,\r\n}\r\ninterface FullQuestion {\r\n    question: Question,\r\n    options: Option[],\r\n}\r\ninterface FullQuiz {\r\n    quiz: Quiz,\r\n    questions: FullQuestion[]\r\n}\r\ninterface Props {\r\n    visible: boolean,\r\n    Quiz: FullQuiz | undefined\r\n    setVisible(visible: boolean): void,\r\n}\r\n\r\nexport default function QuizPage(props: Props) {\r\n    const { visible, Quiz, setVisible } = props\r\n    const [chosed, setChosed] = useState(false)\r\n    const [pageCount, setPageCount] = useState(1)\r\n    const [score, setScore] = useState(0)\r\n\r\n    return (\r\n        <>\r\n            {visible &&\r\n                <div className=\"flex justify-center\">\r\n                    <div id=\"page-container\" className=\"w-4/5 page-container\">\r\n                        <Header quizname={Quiz?.quiz.name} pageCount={pageCount} score={score} questionLength={Quiz?.questions.length}/>\r\n                        <Title title={Quiz?.questions[pageCount-1]?.question.content}/>\r\n                        <Options options={Quiz?.questions[pageCount-1]?.options} />\r\n                        <Quote text={Quiz?.questions[pageCount-1]?.question.quote}/>\r\n                        <NextBtn></NextBtn>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </>\r\n        \r\n    )\r\n}"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,OAAO,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAkC3C,eAAe,SAASC,QAAQA,CAACC,KAAY,EAAE;EAAAC,EAAA;EAAA,IAAAC,eAAA,EAAAC,gBAAA,EAAAC,gBAAA;EAC3C,MAAM;IAAEC,OAAO;IAAEC,IAAI;IAAEC;EAAW,CAAC,GAAGP,KAAK;EAC3C,MAAM,CAACQ,MAAM,EAAEC,SAAS,CAAC,GAAGpB,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAM,CAACqB,SAAS,EAAEC,YAAY,CAAC,GAAGtB,QAAQ,CAAC,CAAC,CAAC;EAC7C,MAAM,CAACuB,KAAK,EAAEC,QAAQ,CAAC,GAAGxB,QAAQ,CAAC,CAAC,CAAC;EAErC,oBACIO,OAAA,CAAAE,SAAA;IAAAgB,QAAA,EACKT,OAAO,iBACJT,OAAA;MAAKmB,SAAS,EAAC,qBAAqB;MAAAD,QAAA,eAChClB,OAAA;QAAKoB,EAAE,EAAC,gBAAgB;QAACD,SAAS,EAAC,sBAAsB;QAAAD,QAAA,gBACrDlB,OAAA,CAACH,MAAM;UAACwB,QAAQ,EAAEX,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEY,IAAI,CAACC,IAAK;UAACT,SAAS,EAAEA,SAAU;UAACE,KAAK,EAAEA,KAAM;UAACQ,cAAc,EAAEd,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEe,SAAS,CAACC;QAAO;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAE,eAChH9B,OAAA,CAACL,KAAK;UAACoC,KAAK,EAAErB,IAAI,aAAJA,IAAI,wBAAAJ,eAAA,GAAJI,IAAI,CAAEe,SAAS,CAACX,SAAS,GAAC,CAAC,CAAC,cAAAR,eAAA,uBAA5BA,eAAA,CAA8B0B,QAAQ,CAACC;QAAQ;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAE,eAC/D9B,OAAA,CAACN,OAAO;UAACwC,OAAO,EAAExB,IAAI,aAAJA,IAAI,wBAAAH,gBAAA,GAAJG,IAAI,CAAEe,SAAS,CAACX,SAAS,GAAC,CAAC,CAAC,cAAAP,gBAAA,uBAA5BA,gBAAA,CAA8B2B;QAAQ;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAG,eAC3D9B,OAAA,CAACJ,KAAK;UAACuC,IAAI,EAAEzB,IAAI,aAAJA,IAAI,wBAAAF,gBAAA,GAAJE,IAAI,CAAEe,SAAS,CAACX,SAAS,GAAC,CAAC,CAAC,cAAAN,gBAAA,uBAA5BA,gBAAA,CAA8BwB,QAAQ,CAACI;QAAM;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAE,eAC5D9B,OAAA,CAACF,OAAO;UAAA6B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAW;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACjB;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACJ,iBAEX;AAGX;AAACzB,EAAA,CAtBuBF,QAAQ;AAAAkC,EAAA,GAARlC,QAAQ;AAAA,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}