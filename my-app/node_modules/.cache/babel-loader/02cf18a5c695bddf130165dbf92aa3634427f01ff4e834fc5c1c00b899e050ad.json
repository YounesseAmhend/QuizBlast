{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\youne\\\\Desktop\\\\Brograming\\\\WEB\\\\Learning\\\\FinalProject\\\\quizblast\\\\my-app\\\\src\\\\components\\\\QuizView\\\\QuizDisplay.tsx\",\n  _s = $RefreshSig$();\nimport { useFetch } from \"../ts/hooks\";\nimport { useState } from \"react\";\nimport Loading from \"../ts/components/loading\";\nimport QuizPage from \"./Pages/QuizPage\";\nimport QuizStart from \"./Pages/QuizStartPage\";\nimport QuizResult from \"./Pages/QuizResult\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PAGES = {\n  START: \"startView\",\n  PAGE: \"pageView\",\n  RESULT: \"resultView\"\n};\nexport default function QuizDisplay(props) {\n  _s();\n  const {\n    id\n  } = props;\n  const {\n    data: Quiz,\n    loaded\n  } = useFetch(\"/q/\" + id);\n  const [score, setScore] = useState(0);\n  const [pages, setPages] = useState({\n    startView: true,\n    pageView: false,\n    resultView: false\n  });\n  const [result, setResult] = useState([]);\n  const [correctQuestions, setCorrectQuestions] = useState(0);\n  function navigateTo(page) {\n    Object.keys(pages).forEach((key, value) => {\n      key === page ? pages[key] = true : pages[key] = false;\n    });\n    setPages({\n      ...pages\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Loading, {\n      loaded: loaded\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(QuizStart, {\n      visible: pages.startView,\n      loaded: loaded,\n      startQuiz: () => navigateTo(PAGES.PAGE),\n      quizname: Quiz === null || Quiz === void 0 ? void 0 : Quiz.quiz.name,\n      questionLength: Quiz === null || Quiz === void 0 ? void 0 : Quiz.questions.length\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), Quiz, /*#__PURE__*/_jsxDEV(QuizPage, {\n      setResults: setResult,\n      setCorrectQuestions: setCorrectQuestions,\n      setScore: setScore,\n      score: score,\n      Quiz: Quiz,\n      setVisible: () => navigateTo(PAGES.RESULT),\n      visible: pages.pageView\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(QuizResult, {\n      result: result,\n      quizname: Quiz === null || Quiz === void 0 ? void 0 : Quiz.quiz.name,\n      questionLength: Quiz === null || Quiz === void 0 ? void 0 : Quiz.questions.length,\n      correctQuestions: correctQuestions,\n      score: score,\n      visible: pages.resultView\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(QuizDisplay, \"o7l88tKqTaLaS8GzxDdy7/SM72w=\", false, function () {\n  return [useFetch];\n});\n_c = QuizDisplay;\nvar _c;\n$RefreshReg$(_c, \"QuizDisplay\");","map":{"version":3,"names":["useFetch","useState","Loading","QuizPage","QuizStart","QuizResult","jsxDEV","_jsxDEV","Fragment","_Fragment","PAGES","START","PAGE","RESULT","QuizDisplay","props","_s","id","data","Quiz","loaded","score","setScore","pages","setPages","startView","pageView","resultView","result","setResult","correctQuestions","setCorrectQuestions","navigateTo","page","Object","keys","forEach","key","value","children","fileName","_jsxFileName","lineNumber","columnNumber","visible","startQuiz","quizname","quiz","name","questionLength","questions","length","setResults","setVisible","_c","$RefreshReg$"],"sources":["C:/Users/youne/Desktop/Brograming/WEB/Learning/FinalProject/quizblast/my-app/src/components/QuizView/QuizDisplay.tsx"],"sourcesContent":["import { useFetch } from \"../ts/hooks\"\r\nimport { useState } from \"react\";\r\nimport Loading from \"../ts/components/loading\";\r\nimport QuizPage from \"./Pages/QuizPage\";\r\nimport QuizStart from \"./Pages/QuizStartPage\";\r\nimport QuizResult from \"./Pages/QuizResult\";\r\n\r\ninterface Option{\r\n    id: number;\r\n    content: string;\r\n    correct: boolean;\r\n}\r\ninterface Quiz {\r\n    id: number;\r\n    name: string;\r\n    username: string;\r\n}\r\ninterface Results{\r\n    Quesiton:string;\r\n    answer:string;\r\n    correct: boolean;\r\n    correctAnswer:string;\r\n    quote?:string;\r\n}\r\ninterface Question {\r\n    count: number,\r\n    quiz_id: number,\r\n    id: number | undefined,\r\n    content: string,\r\n    options: Option[],\r\n    quote: string,\r\n}\r\ninterface FullQuestion{\r\n    question: Question,\r\n    options: Option[],\r\n}\r\ninterface FullQuiz{\r\n    quiz: Quiz,\r\n    questions:FullQuestion[]\r\n}\r\ninterface Props{\r\n    id:number,\r\n}\r\nconst PAGES = {\r\n    START:\"startView\",\r\n    PAGE:\"pageView\",\r\n    RESULT:\"resultView\",\r\n}\r\ninterface pages{\r\n    startView: boolean,\r\n    pageView: boolean,\r\n    resultView: boolean,\r\n}\r\nexport default function QuizDisplay(props: Props){\r\n    const { id } = props\r\n    const {data : Quiz, loaded} = useFetch<FullQuiz>(\"/q/\"+id)\r\n    const [score, setScore] = useState(0)\r\n    const [pages, setPages] = useState({\r\n        startView: true,\r\n        pageView: false,\r\n        resultView: false,\r\n    })\r\n    const [result, setResult] = useState<Results[]>([]);\r\n    const [correctQuestions, setCorrectQuestions] = useState(0)\r\n    function navigateTo(page: string){\r\n        Object.keys(pages).forEach((key, value) => {\r\n            key === page ? pages[key as keyof pages] = true : pages[key as keyof pages] = false\r\n          })\r\n        setPages({...pages})\r\n    }\r\n    return(\r\n        <>\r\n            <Loading loaded={loaded}/>\r\n            <QuizStart \r\n              visible={pages.startView} \r\n              loaded={loaded} \r\n              startQuiz={() => navigateTo(PAGES.PAGE)} \r\n              quizname={Quiz?.quiz.name} \r\n              questionLength={Quiz?.questions.length}\r\n              \r\n            />\r\n            {Quiz }\r\n            <QuizPage setResults={setResult} setCorrectQuestions={setCorrectQuestions} setScore={setScore} score={score} Quiz={Quiz} setVisible={() => navigateTo(PAGES.RESULT)} visible={pages.pageView}/>\r\n            <QuizResult result={result} quizname={Quiz?.quiz.name}  questionLength={Quiz?.questions.length} correctQuestions={correctQuestions} score={score}visible={pages.resultView}/>\r\n        </>\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}