{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\youne\\\\Desktop\\\\Brograming\\\\WEB\\\\Learning\\\\FinalProject\\\\quizblast\\\\my-app\\\\src\\\\components\\\\QuizView\\\\Pages\\\\QuizPage.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { Options, NextBtn, Header, Title, Quote } from \"./components/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function QuizPage(props) {\n  _s();\n  var _Quiz$questions, _Quiz$questions2;\n  const {\n    visible,\n    Quiz,\n    setVisible,\n    score,\n    setScore,\n    setCorrectQuestions,\n    setResults\n  } = props;\n  const [chosed, setChosed] = useState(false);\n  const [pageCount, setPageCount] = useState(1);\n  const [selectedOption, setSelectedOption] = useState(undefined);\n  const [halfResult, setResult] = useState();\n  useEffect(() => {\n    if (visible) setResult({\n      count: pageCount,\n      Quesiton: Quiz === null || Quiz === void 0 ? void 0 : Quiz.questions[pageCount - 1].question.content,\n      quote: Quiz === null || Quiz === void 0 ? void 0 : Quiz.questions[pageCount - 1].question.quote\n    });\n  }, [pageCount, visible]);\n  console.log(halfResult);\n  use;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: visible && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"page-container\",\n        className: \"w-4/5 page-container\",\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          quizname: Quiz.quiz.name,\n          pageCount: pageCount,\n          score: score,\n          questionLength: Quiz === null || Quiz === void 0 ? void 0 : Quiz.questions.length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Title, {\n          title: Quiz.questions[pageCount - 1].question.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Options, {\n          halfResult: halfResult,\n          setResults: setResults,\n          setCorrectQuestions: setCorrectQuestions,\n          setScore: setScore,\n          selectedOption: selectedOption,\n          setSelectedOption: setSelectedOption,\n          options: Quiz === null || Quiz === void 0 ? void 0 : (_Quiz$questions = Quiz.questions[pageCount - 1]) === null || _Quiz$questions === void 0 ? void 0 : _Quiz$questions.options,\n          setChosed: setChosed\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(NextBtn, {\n          questionLength: Quiz.questions.length,\n          setVisible: setVisible,\n          setSelectedOption: setSelectedOption,\n          setChosed: setChosed,\n          pageCount: pageCount,\n          setPageCount: setPageCount,\n          visible: chosed\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Quote, {\n          text: (_Quiz$questions2 = Quiz.questions[pageCount - 1]) === null || _Quiz$questions2 === void 0 ? void 0 : _Quiz$questions2.question.quote\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n}\n_s(QuizPage, \"AgeFmvOW2TynZlYb3xGhqDxS1i4=\");\n_c = QuizPage;\nvar _c;\n$RefreshReg$(_c, \"QuizPage\");","map":{"version":3,"names":["useState","useEffect","Options","NextBtn","Header","Title","Quote","jsxDEV","_jsxDEV","Fragment","_Fragment","QuizPage","props","_s","_Quiz$questions","_Quiz$questions2","visible","Quiz","setVisible","score","setScore","setCorrectQuestions","setResults","chosed","setChosed","pageCount","setPageCount","selectedOption","setSelectedOption","undefined","halfResult","setResult","count","Quesiton","questions","question","content","quote","console","log","use","children","className","id","quizname","quiz","name","questionLength","length","fileName","_jsxFileName","lineNumber","columnNumber","title","options","text","_c","$RefreshReg$"],"sources":["C:/Users/youne/Desktop/Brograming/WEB/Learning/FinalProject/quizblast/my-app/src/components/QuizView/Pages/QuizPage.tsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport {Options, NextBtn, Header, Title, Quote} from \"./components/index\"\r\n\r\ninterface Option {\r\n    id: number;\r\n    content: string;\r\n    correct: boolean;\r\n}\r\ninterface Quiz {\r\n    id: number;\r\n    name: string;\r\n    username: string;\r\n}\r\ninterface Question {\r\n    count: number,\r\n    quiz_id: number,\r\n    id: number | undefined,\r\n    content: string,\r\n    options: Option[],\r\n    quote: string,\r\n}\r\ninterface FullQuestion {\r\n    question: Question,\r\n    options: Option[],\r\n}\r\ninterface FullQuiz {\r\n    quiz: Quiz,\r\n    questions: FullQuestion[]\r\n}\r\ninterface half{\r\n    count:number;\r\n    Quesiton:string;\r\n    quote?:string;\r\n  }\r\ninterface Results{\r\n    count:number;\r\n    Quesiton:string;\r\n    answer:string;\r\n    correct: boolean;\r\n    correctAnswer:string;\r\n    quote?:string;\r\n}\r\ninterface Props {\r\n    visible: boolean,\r\n    Quiz: FullQuiz,\r\n    score: number\r\n    setVisible(): void,\r\n    setScore:React.Dispatch<React.SetStateAction<number>>\r\n    setCorrectQuestions: React.Dispatch<React.SetStateAction<number>>\r\n    setResults: React.Dispatch<React.SetStateAction<Results[]>>\r\n}\r\n\r\nexport default function QuizPage(props: Props) {\r\n    const { visible, Quiz, setVisible, score , setScore, setCorrectQuestions, setResults } = props\r\n    const [chosed, setChosed] = useState(false)\r\n    const [pageCount, setPageCount] = useState(1)\r\n    const [selectedOption, setSelectedOption] = useState<number | undefined>(undefined)\r\n    const [halfResult, setResult] = useState<half>();\r\n    useEffect(()=>{\r\n        if(visible)\r\n        setResult({\r\n            count:pageCount,\r\n            Quesiton:Quiz?.questions[pageCount-1].question.content,\r\n            quote:Quiz?.questions[pageCount-1].question.quote,\r\n        })\r\n    },[pageCount, visible])\r\n    console.log(halfResult);\r\n    use\r\n    return (\r\n        <>\r\n            {visible &&\r\n                <div className=\"flex justify-center\">\r\n                    <div id=\"page-container\" className=\"w-4/5 page-container\">\r\n                        <Header quizname={Quiz.quiz.name} pageCount={pageCount} score={score} questionLength={Quiz?.questions.length}/>\r\n                        <Title title={Quiz.questions[pageCount-1].question.content}/>\r\n                        <Options halfResult={halfResult!} setResults={setResults} setCorrectQuestions={setCorrectQuestions} setScore={setScore} selectedOption={selectedOption} setSelectedOption={setSelectedOption} options={Quiz?.questions[pageCount-1]?.options} setChosed={setChosed}/>\r\n                        <NextBtn questionLength={Quiz.questions.length} setVisible={setVisible} setSelectedOption={setSelectedOption} setChosed={setChosed} pageCount={pageCount} setPageCount={setPageCount} visible={chosed}/>\r\n\r\n                        <Quote text={Quiz.questions[pageCount-1]?.question.quote}/>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </>\r\n        \r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}