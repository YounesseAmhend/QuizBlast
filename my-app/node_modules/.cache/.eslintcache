[{"C:\\Users\\youne\\Desktop\\Brograming\\WEB\\Learning\\FinalProject\\quizblast\\my-app\\src\\index.tsx":"1","C:\\Users\\youne\\Desktop\\Brograming\\WEB\\Learning\\FinalProject\\quizblast\\my-app\\src\\reportWebVitals.ts":"2","C:\\Users\\youne\\Desktop\\Brograming\\WEB\\Learning\\FinalProject\\quizblast\\my-app\\src\\App.tsx":"3","C:\\Users\\youne\\Desktop\\Brograming\\WEB\\Learning\\FinalProject\\quizblast\\my-app\\src\\components\\Login.tsx":"4","C:\\Users\\youne\\Desktop\\Brograming\\WEB\\Learning\\FinalProject\\quizblast\\my-app\\src\\components\\Register.tsx":"5","C:\\Users\\youne\\Desktop\\Brograming\\WEB\\Learning\\FinalProject\\quizblast\\my-app\\src\\components\\ts\\staticFunctions.ts":"6","C:\\Users\\youne\\Desktop\\Brograming\\WEB\\Learning\\FinalProject\\quizblast\\my-app\\src\\components\\ts\\hooks.ts":"7","C:\\Users\\youne\\Desktop\\Brograming\\WEB\\Learning\\FinalProject\\quizblast\\my-app\\src\\components\\QuizView\\QuizDisplay.tsx":"8","C:\\Users\\youne\\Desktop\\Brograming\\WEB\\Learning\\FinalProject\\quizblast\\my-app\\src\\components\\QuizView\\Quiz.tsx":"9","C:\\Users\\youne\\Desktop\\Brograming\\WEB\\Learning\\FinalProject\\quizblast\\my-app\\src\\components\\QuizForm\\Quizform.tsx":"10","C:\\Users\\youne\\Desktop\\Brograming\\WEB\\Learning\\FinalProject\\quizblast\\my-app\\src\\components\\QuizForm\\QuestionInput.tsx":"11","C:\\Users\\youne\\Desktop\\Brograming\\WEB\\Learning\\FinalProject\\quizblast\\my-app\\src\\components\\QuizForm\\question.tsx":"12","C:\\Users\\youne\\Desktop\\Brograming\\WEB\\Learning\\FinalProject\\quizblast\\my-app\\src\\components\\QuizForm\\QuestoinHeadForm.tsx":"13","C:\\Users\\youne\\Desktop\\Brograming\\WEB\\Learning\\FinalProject\\quizblast\\my-app\\src\\components\\QuizForm\\Input.tsx":"14","C:\\Users\\youne\\Desktop\\Brograming\\WEB\\Learning\\FinalProject\\quizblast\\my-app\\src\\components\\QuizForm\\Options.tsx":"15","C:\\Users\\youne\\Desktop\\Brograming\\WEB\\Learning\\FinalProject\\quizblast\\my-app\\src\\components\\ts\\components\\csrf.tsx":"16","C:\\Users\\youne\\Desktop\\Brograming\\WEB\\Learning\\FinalProject\\quizblast\\my-app\\src\\components\\ts\\components\\loading.tsx":"17","C:\\Users\\youne\\Desktop\\Brograming\\WEB\\Learning\\FinalProject\\quizblast\\my-app\\src\\components\\Navbar\\Navbar.tsx":"18","C:\\Users\\youne\\Desktop\\Brograming\\WEB\\Learning\\FinalProject\\quizblast\\my-app\\src\\components\\Navbar\\Unkn.tsx":"19","C:\\Users\\youne\\Desktop\\Brograming\\WEB\\Learning\\FinalProject\\quizblast\\my-app\\src\\components\\Navbar\\Auth.tsx":"20","C:\\Users\\youne\\Desktop\\Brograming\\WEB\\Learning\\FinalProject\\quizblast\\my-app\\src\\components\\QuizView\\Pages\\QuizPage.tsx":"21","C:\\Users\\youne\\Desktop\\Brograming\\WEB\\Learning\\FinalProject\\quizblast\\my-app\\src\\components\\QuizView\\Pages\\QuizStartPage.tsx":"22","C:\\Users\\youne\\Desktop\\Brograming\\WEB\\Learning\\FinalProject\\quizblast\\my-app\\src\\components\\QuizView\\Quizview.tsx":"23","C:\\Users\\youne\\Desktop\\Brograming\\WEB\\Learning\\FinalProject\\quizblast\\my-app\\src\\components\\index.tsx":"24","C:\\Users\\youne\\Desktop\\Brograming\\WEB\\Learning\\FinalProject\\quizblast\\my-app\\src\\components\\QuizView\\Pages\\components\\Options.tsx":"25","C:\\Users\\youne\\Desktop\\Brograming\\WEB\\Learning\\FinalProject\\quizblast\\my-app\\src\\components\\QuizView\\Pages\\components\\Title.tsx":"26","C:\\Users\\youne\\Desktop\\Brograming\\WEB\\Learning\\FinalProject\\quizblast\\my-app\\src\\components\\QuizView\\Pages\\components\\Quote.tsx":"27","C:\\Users\\youne\\Desktop\\Brograming\\WEB\\Learning\\FinalProject\\quizblast\\my-app\\src\\components\\QuizView\\Pages\\components\\Header.tsx":"28","C:\\Users\\youne\\Desktop\\Brograming\\WEB\\Learning\\FinalProject\\quizblast\\my-app\\src\\components\\QuizView\\Pages\\components\\NextBtn.tsx":"29","C:\\Users\\youne\\Desktop\\Brograming\\WEB\\Learning\\FinalProject\\quizblast\\my-app\\src\\components\\QuizView\\Pages\\components\\index.tsx":"30","C:\\Users\\youne\\Desktop\\Brograming\\WEB\\Learning\\FinalProject\\quizblast\\my-app\\src\\components\\QuizView\\Pages\\QuizResult.tsx":"31","C:\\Users\\youne\\Desktop\\Brograming\\WEB\\Learning\\FinalProject\\quizblast\\my-app\\src\\components\\QuizView\\Pages\\AnimatedProgressProvider.tsx":"32","C:\\Users\\youne\\Desktop\\Brograming\\WEB\\Learning\\FinalProject\\quizblast\\my-app\\src\\components\\QuizView\\Pages\\components\\MoreBtn.tsx":"33","C:\\Users\\youne\\Desktop\\Brograming\\WEB\\Learning\\FinalProject\\quizblast\\my-app\\src\\components\\QuizForm\\Time.tsx":"34"},{"size":554,"mtime":1682877150213,"results":"35","hashOfConfig":"36"},{"size":425,"mtime":1676129364568,"results":"37","hashOfConfig":"36"},{"size":3320,"mtime":1680370671325,"results":"38","hashOfConfig":"36"},{"size":1011,"mtime":1679414211943,"results":"39","hashOfConfig":"36"},{"size":1499,"mtime":1679414211948,"results":"40","hashOfConfig":"36"},{"size":3996,"mtime":1684594854653,"results":"41","hashOfConfig":"36"},{"size":2743,"mtime":1682876477913,"results":"42","hashOfConfig":"36"},{"size":2605,"mtime":1684621982890,"results":"43","hashOfConfig":"36"},{"size":547,"mtime":1679658973919,"results":"44","hashOfConfig":"36"},{"size":2748,"mtime":1679434101822,"results":"45","hashOfConfig":"36"},{"size":675,"mtime":1678836325808,"results":"46","hashOfConfig":"36"},{"size":8763,"mtime":1684622870965,"results":"47","hashOfConfig":"36"},{"size":393,"mtime":1678871991727,"results":"48","hashOfConfig":"36"},{"size":722,"mtime":1678836925951,"results":"49","hashOfConfig":"36"},{"size":906,"mtime":1684445175465,"results":"50","hashOfConfig":"36"},{"size":814,"mtime":1678572354396,"results":"51","hashOfConfig":"36"},{"size":411,"mtime":1679414500509,"results":"52","hashOfConfig":"36"},{"size":1049,"mtime":1679594210353,"results":"53","hashOfConfig":"36"},{"size":966,"mtime":1679594458014,"results":"54","hashOfConfig":"36"},{"size":390,"mtime":1679593783071,"results":"55","hashOfConfig":"36"},{"size":3022,"mtime":1684621947168,"results":"56","hashOfConfig":"36"},{"size":1084,"mtime":1680454880242,"results":"57","hashOfConfig":"36"},{"size":1938,"mtime":1682877554758,"results":"58","hashOfConfig":"36"},{"size":314,"mtime":1679659466273,"results":"59","hashOfConfig":"36"},{"size":2505,"mtime":1681857090783,"results":"60","hashOfConfig":"36"},{"size":294,"mtime":1679675429432,"results":"61","hashOfConfig":"36"},{"size":179,"mtime":1679676190063,"results":"62","hashOfConfig":"36"},{"size":801,"mtime":1684621806703,"results":"63","hashOfConfig":"36"},{"size":1071,"mtime":1680455039022,"results":"64","hashOfConfig":"36"},{"size":218,"mtime":1680120822197,"results":"65","hashOfConfig":"36"},{"size":3014,"mtime":1684622002872,"results":"66","hashOfConfig":"36"},{"size":2030,"mtime":1681232215214,"results":"67","hashOfConfig":"36"},{"size":1769,"mtime":1684443589309,"results":"68","hashOfConfig":"36"},{"size":1683,"mtime":1684595093903,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},"1xm6ikq",{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"73"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"73"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136"},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"140","messages":"141","suppressedMessages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"73"},{"filePath":"144","messages":"145","suppressedMessages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"147","messages":"148","suppressedMessages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"73"},{"filePath":"151","messages":"152","suppressedMessages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"154","messages":"155","suppressedMessages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"157","messages":"158","suppressedMessages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","suppressedMessages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"163","messages":"164","suppressedMessages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"166","messages":"167","suppressedMessages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169"},{"filePath":"170","messages":"171","suppressedMessages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","suppressedMessages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"176","messages":"177","suppressedMessages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179"},"C:\\Users\\youne\\Desktop\\Brograming\\WEB\\Learning\\FinalProject\\quizblast\\my-app\\src\\index.tsx",[],[],[],"C:\\Users\\youne\\Desktop\\Brograming\\WEB\\Learning\\FinalProject\\quizblast\\my-app\\src\\reportWebVitals.ts",[],[],"C:\\Users\\youne\\Desktop\\Brograming\\WEB\\Learning\\FinalProject\\quizblast\\my-app\\src\\App.tsx",["180","181"],[],"import './App.css';\nimport {\n  QuizForm, Navbar, Login, Register, QuizDisplay,\n  Home\n} from './components/index'\nimport { useState, useEffect, useCallback } from \"react\"\nimport { useAuth } from './components/ts/hooks';\n\nconst PAGES: Pages = {\n  HOME: { name: \"home\", path: \"/\", auth: false },\n  NEW: { name: \"new\", path: \"/new\", auth: true },\n  VIEW_QUIZ: { name: \"view_quiz\", path: \"/quiz/\", auth: true },\n\n  REGISTER: { name: \"register\", path: \"/register\", auth: false },\n  LOGIN: { name: \"login\", path: \"/login\", auth: false },\n}\n\ninterface Pages {\n  HOME: Page,\n  NEW: Page,\n  VIEW_QUIZ: Page,\n\n  REGISTER: Page,\n  LOGIN: Page,\n}\ninterface Display {\n  home: boolean,\n  new: boolean,\n  view_quiz: boolean,\n\n  register: boolean,\n  login: boolean,\n}\ninterface Page {\n  auth: boolean,\n  name: string,\n  path: string,\n}\nfunction App() {\n  useEffect(() => {\n    window.onpopstate = function () {\n      window.location.reload()\n    }\n  }, [])\n\n  const [id, setId] = useState<number | undefined>(undefined)\n  const { is_authenticated, loaded } = useAuth()\n  const [display, setDisplays] = useState({\n    home: true,\n    new: false,\n    view_quiz: false,\n    register: false,\n    login: false,\n  })\n\n  const navigateTo = useCallback((page: Page) => {\n    Object.keys(display).forEach((key, value) => {\n      key === page.name ? display[key as keyof Display] = true : display[key as keyof Display] = false\n    })\n    if (page.path !== PAGES.VIEW_QUIZ.path) { goToPath(page.path) }\n    setDisplays({ ...display })\n  }, [])\n\n  useEffect(() => {\n    const pathname = window.location.pathname;\n    Object.keys(PAGES).forEach((key, value) => {\n      const PAGE = PAGES[key as keyof Pages]\n      if (loaded) {\n        if (pathname.substring(0, 6) === PAGES.VIEW_QUIZ.path && is_authenticated) {\n          setId(parseInt(pathname.substring(6, pathname.length)))\n          navigateTo({ path: pathname, name: PAGES.VIEW_QUIZ.name, auth: PAGES.VIEW_QUIZ.auth })\n        }\n        else if (PAGE.path === pathname && pathname !== \"/\" && PAGE.auth === is_authenticated) {\n          navigateTo(PAGE)\n        }\n      }\n    })\n  }\n  ,[is_authenticated])\n\n  useEffect(() => { if (id && display.view_quiz) { goToPath(\"/quiz/\" + id) } }, [display.view_quiz, id])\n\n  function goToPath(pathname: string) {\n    window.history.pushState(null, \"\", pathname);\n  }\n  function displayHome() {\n    navigateTo(PAGES.HOME)\n  }\n  function displayNew() {\n    navigateTo(PAGES.NEW)\n  }\n  function displayLogin() {\n    navigateTo(PAGES.LOGIN)\n  }\n  function displayRegister() {\n    navigateTo(PAGES.REGISTER)\n  }\n  function displayView() {\n    navigateTo(PAGES.VIEW_QUIZ)\n  }\n  return (\n    <>\n      <Navbar\n        is_authenticated={is_authenticated}\n        homeDisplay={displayHome}\n        newDisplay={displayNew}\n        loginDisplay={displayLogin}\n        registerDisplay={displayRegister}\n      />\n      {(display.home && loaded) && (\n        <Home goView={displayView} setId={setId} />\n      )}\n      {display.new && (\n        <QuizForm goHome={displayHome} />\n      )}\n      {display.login && (\n        <Login goRegister={displayHome} />\n      )}\n      {display.register && (\n        <Register goLogin={displayLogin} />\n      )}\n      {(display.view_quiz && id) &&\n        <QuizDisplay id={id} key={id} />\n      }\n    </>\n  );\n}\n\nexport default App;\n","C:\\Users\\youne\\Desktop\\Brograming\\WEB\\Learning\\FinalProject\\quizblast\\my-app\\src\\components\\Login.tsx",[],[],"C:\\Users\\youne\\Desktop\\Brograming\\WEB\\Learning\\FinalProject\\quizblast\\my-app\\src\\components\\Register.tsx",[],[],"C:\\Users\\youne\\Desktop\\Brograming\\WEB\\Learning\\FinalProject\\quizblast\\my-app\\src\\components\\ts\\staticFunctions.ts",[],[],"C:\\Users\\youne\\Desktop\\Brograming\\WEB\\Learning\\FinalProject\\quizblast\\my-app\\src\\components\\ts\\hooks.ts",["182","183"],[],"import {useState, useEffect, useRef, useCallback } from \"react\"\r\n\r\ntype method = 'GET' | 'POST' | 'DELETE' | 'PUT' | 'PATCH'\r\n\r\nexport function useAuth(){\r\n\r\n    const [is_authenticated, setAuthentication] = useState<boolean | undefined>(undefined)\r\n    const [loaded, setLoaded] = useState(false)\r\n    const [error, setError] = useState(undefined)\r\n\r\n    useEffect(()=>{\r\n        \r\n            const isAuthenticateds = async () => {\r\n\r\n                await fetch(\"/auth\",{\r\n                    method: \"GET\",\r\n                    })\r\n\r\n                    .then((response) => response.json())\r\n\r\n                    .then((result) => {\r\n                        console.log(result)\r\n                        setAuthentication(result.is_authenticated)\r\n                        setLoaded(true)\r\n                    })\r\n\r\n                    .catch((Error)=>setError(Error))\r\n\r\n            }\r\n\r\n            isAuthenticateds()\r\n\r\n        }\r\n    ,[])\r\n\r\n    return {is_authenticated, loaded, error}\r\n}\r\n\r\nexport function useFetch<T>(link: string, init?: T, method: method = 'GET', request?: any){\r\n\r\n    const [data, setData] = useState<T | undefined | any>(init)\r\n\r\n    const [loaded, setLoaded] = useState(false)\r\n\r\n    const hasMore = useRef(true)\r\n\r\n    const [error, setError] = useState<string | undefined>()\r\n\r\n    const fetchMore = async (request: any) =>{\r\n            console.log(request)\r\n            await fetch(\"http://127.0.0.1:8000\" + link, {\r\n                method: method,\r\n                body: JSON.stringify(request),\r\n            })\r\n\r\n            .then(response =>{\r\n                return response.json()\r\n            })\r\n\r\n            .then((result)=>{\r\n\r\n                if(!result.error){\r\n\r\n                    console.log(data)\r\n\r\n                    setData((old:any)=>[...old,...result])\r\n                    \r\n                    setLoaded(true)\r\n                }\r\n                else{\r\n\r\n                    setError(result.error);\r\n\r\n                    hasMore.current = false;\r\n\r\n                    console.log(\"Enough\");\r\n                }\r\n            })\r\n            .catch(err=>setError(err))\r\n        }\r\n    useEffect(()=>{\r\n\r\n        if(method === 'GET'){\r\n\r\n            const fetchdata = async () => {\r\n                await fetch(\"http://127.0.0.1:8000\"+link)\r\n                .then(response =>{\r\n                    console.log(response)\r\n                    return response.json()\r\n                })\r\n                .then((result)=>{\r\n                    setData(result)\r\n                    setLoaded(true)\r\n                })\r\n                .catch(err=>setError(err))\r\n            }   \r\n\r\n            fetchdata()\r\n    }\r\n    },[])\r\n    \r\n    return {data, loaded, error, hasMore, fetchMore}\r\n}","C:\\Users\\youne\\Desktop\\Brograming\\WEB\\Learning\\FinalProject\\quizblast\\my-app\\src\\components\\QuizView\\QuizDisplay.tsx",[],[],"C:\\Users\\youne\\Desktop\\Brograming\\WEB\\Learning\\FinalProject\\quizblast\\my-app\\src\\components\\QuizView\\Quiz.tsx",[],[],"C:\\Users\\youne\\Desktop\\Brograming\\WEB\\Learning\\FinalProject\\quizblast\\my-app\\src\\components\\QuizForm\\Quizform.tsx",[],[],"C:\\Users\\youne\\Desktop\\Brograming\\WEB\\Learning\\FinalProject\\quizblast\\my-app\\src\\components\\QuizForm\\QuestionInput.tsx",[],[],"C:\\Users\\youne\\Desktop\\Brograming\\WEB\\Learning\\FinalProject\\quizblast\\my-app\\src\\components\\QuizForm\\question.tsx",[],[],"C:\\Users\\youne\\Desktop\\Brograming\\WEB\\Learning\\FinalProject\\quizblast\\my-app\\src\\components\\QuizForm\\QuestoinHeadForm.tsx",[],[],"C:\\Users\\youne\\Desktop\\Brograming\\WEB\\Learning\\FinalProject\\quizblast\\my-app\\src\\components\\QuizForm\\Input.tsx",[],[],"C:\\Users\\youne\\Desktop\\Brograming\\WEB\\Learning\\FinalProject\\quizblast\\my-app\\src\\components\\QuizForm\\Options.tsx",[],[],"C:\\Users\\youne\\Desktop\\Brograming\\WEB\\Learning\\FinalProject\\quizblast\\my-app\\src\\components\\ts\\components\\csrf.tsx",[],[],"C:\\Users\\youne\\Desktop\\Brograming\\WEB\\Learning\\FinalProject\\quizblast\\my-app\\src\\components\\ts\\components\\loading.tsx",[],[],"C:\\Users\\youne\\Desktop\\Brograming\\WEB\\Learning\\FinalProject\\quizblast\\my-app\\src\\components\\Navbar\\Navbar.tsx",[],[],"C:\\Users\\youne\\Desktop\\Brograming\\WEB\\Learning\\FinalProject\\quizblast\\my-app\\src\\components\\Navbar\\Unkn.tsx",[],[],"C:\\Users\\youne\\Desktop\\Brograming\\WEB\\Learning\\FinalProject\\quizblast\\my-app\\src\\components\\Navbar\\Auth.tsx",[],[],"C:\\Users\\youne\\Desktop\\Brograming\\WEB\\Learning\\FinalProject\\quizblast\\my-app\\src\\components\\QuizView\\Pages\\QuizPage.tsx",["184"],[],"import { useState, useEffect } from \"react\";\r\nimport {Options, NextBtn, Header, Title, Quote} from \"./components/index\"\r\n\r\ninterface Option {\r\n    id: number;\r\n    content: string;\r\n    correct: boolean;\r\n}\r\ninterface Quiz {\r\n    id: number;\r\n    name: string;\r\n    username: string;\r\n}\r\ninterface Question {\r\n    count: number,\r\n    quiz_id: number,\r\n    id: number | undefined,\r\n    content: string,\r\n    options: Option[],\r\n    quote: string,\r\n    timer:number,\r\n}\r\ninterface FullQuestion {\r\n    question: Question,\r\n    options: Option[],\r\n}\r\ninterface FullQuiz {\r\n    quiz: Quiz,\r\n    questions: FullQuestion[]\r\n}\r\ninterface half{\r\n    count:number;\r\n    Quesiton:string;\r\n    quote?:string;\r\n  }\r\ninterface Results{\r\n    count:number;\r\n    Quesiton:string;\r\n    answer:string;\r\n    correct: boolean;\r\n    correctAnswer:string;\r\n    quote?:string;\r\n}\r\ninterface Props {\r\n    visible: boolean,\r\n    Quiz: FullQuiz,\r\n    score: number\r\n    setVisible(): void,\r\n    setScore:React.Dispatch<React.SetStateAction<number>>\r\n    setCorrectQuestions: React.Dispatch<React.SetStateAction<number>>\r\n    setResults: React.Dispatch<React.SetStateAction<Results[]>>\r\n}\r\n\r\nexport default function QuizPage(props: Props) {\r\n    const { visible, Quiz, setVisible, score , setScore, setCorrectQuestions, setResults } = props\r\n    const [chosed, setChosed] = useState(false)\r\n    const [pageCount, setPageCount] = useState(1)\r\n    const [selectedOption, setSelectedOption] = useState<number | undefined>(undefined)\r\n    const [halfResult, setResult] = useState<half>();\r\n    useEffect(()=>{\r\n        if(visible)\r\n        setResult({\r\n            count:pageCount,\r\n            Quesiton:Quiz?.questions[pageCount-1].question.content,\r\n            quote:Quiz?.questions[pageCount-1].question.quote,\r\n        })\r\n    },[pageCount, visible])\r\n    console.log(halfResult);\r\n    \r\n    return (\r\n        <>\r\n            {visible &&\r\n                <div className=\"flex justify-center\">\r\n                    <div id=\"page-container\" className=\"w-4/5 page-container\">\r\n                        <Header timer={Quiz?.questions[pageCount-1]?.question.timer} quizname={Quiz.quiz.name} pageCount={pageCount} score={score} questionLength={Quiz?.questions.length}/>\r\n                        <Title title={Quiz.questions[pageCount-1].question.content}/>\r\n                        <Options halfResult={halfResult!} setResults={setResults} setCorrectQuestions={setCorrectQuestions} setScore={setScore} selectedOption={selectedOption} setSelectedOption={setSelectedOption} options={Quiz?.questions[pageCount-1]?.options} setChosed={setChosed}/>\r\n                        <NextBtn questionLength={Quiz.questions.length} setVisible={setVisible} setSelectedOption={setSelectedOption} setChosed={setChosed} pageCount={pageCount} setPageCount={setPageCount} visible={chosed}/>\r\n\r\n                        <Quote text={Quiz.questions[pageCount-1]?.question.quote}/>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </>\r\n        \r\n    )\r\n}","C:\\Users\\youne\\Desktop\\Brograming\\WEB\\Learning\\FinalProject\\quizblast\\my-app\\src\\components\\QuizView\\Pages\\QuizStartPage.tsx",[],[],"C:\\Users\\youne\\Desktop\\Brograming\\WEB\\Learning\\FinalProject\\quizblast\\my-app\\src\\components\\QuizView\\Quizview.tsx",["185","186","187","188","189"],[],"import { lazy, Suspense, useEffect, useRef, useState } from \"react\";\r\nimport InfiniteScroll from 'react-infinite-scroller';\r\nimport { useFetch } from \"../ts/hooks\";\r\nimport Loading from \"../ts/components/loading\";\r\n\r\ninterface Props {\r\n    goView(): void,\r\n    setId(par: number): void, \r\n}\r\n\r\ninterface Quiz {\r\n    id: number;\r\n    username: string;\r\n    name: string;\r\n}\r\n\r\nconst Quiz = lazy(() => import(\"./Quiz\"));\r\n\r\nexport default function Home(props: Props) {\r\n    const pageCount = useRef(0)\r\n    const { data: quizs, loaded, fetchMore, error ,hasMore} = useFetch<Quiz[]>(\"/quiz\", [], \"POST\");\r\n    const oldData = useRef()\r\n\r\n    // todo react infinite scroll\r\n    const getMore = async () => {\r\n            pageCount.current++;\r\n            await fetchMore({\"page_number\":pageCount.current})\r\n            \r\n            console.log(\"done\")\r\n\r\n            // updating the page counter\r\n\r\n            \r\n\r\n            console.log(pageCount.current)\r\n\r\n    }\r\n\r\n    return (\r\n        <Suspense fallback={<Loading loaded={false} />}>\r\n            <Loading loaded={loaded}/>\r\n            <InfiniteScroll\r\n                loadMore={getMore}\r\n                hasMore={hasMore.current}\r\n                loader={<Loading loaded={true} />}\r\n            >\r\n                <div onScrollCapture={() => {}} className=\"quiz-container\">\r\n                    {quizs?.map(function (quiz: Quiz) {\r\n                        return (\r\n                            <Quiz\r\n                                goView={props.goView}\r\n                                setId={props.setId}\r\n                                key={quiz.id}\r\n                                id={quiz.id}\r\n                                username={quiz.username}\r\n                                name={quiz.name}\r\n                            />\r\n                        );\r\n                    })}\r\n                </div>\r\n            </InfiniteScroll>\r\n        </Suspense>\r\n    );\r\n}\r\n","C:\\Users\\youne\\Desktop\\Brograming\\WEB\\Learning\\FinalProject\\quizblast\\my-app\\src\\components\\index.tsx",[],[],"C:\\Users\\youne\\Desktop\\Brograming\\WEB\\Learning\\FinalProject\\quizblast\\my-app\\src\\components\\QuizView\\Pages\\components\\Options.tsx",["190"],[],"import React, { useState } from 'react'\r\n\r\ninterface Option {\r\n  id: number;\r\n  content: string;\r\n  correct: boolean;\r\n}\r\ninterface Results{\r\n  count:number;\r\n  Quesiton:string;\r\n  answer:string;\r\n  correct: boolean;\r\n  correctAnswer:string;\r\n  quote?:string;\r\n}\r\ninterface half{\r\n  count:number;\r\n  Quesiton:string;\r\n  quote?:string;\r\n}\r\ninterface Props {\r\n  options: Option[];\r\n  setChosed(value: boolean): void;\r\n  setSelectedOption: React.Dispatch<React.SetStateAction<number | undefined>>\r\n  setScore: React.Dispatch<React.SetStateAction<number>>\r\n  setCorrectQuestions: React.Dispatch<React.SetStateAction<number>>\r\n  setResults: React.Dispatch<React.SetStateAction<Results[]>>\r\n  halfResult: half;\r\n  selectedOption: number | undefined;\r\n}\r\nexport default function Options(props: Props) {\r\n  let correctOption:string;\r\n  function showResult(id: number, correct: boolean, content: string) {\r\n    if (props.selectedOption === undefined) {\r\n      for(let i = 0; i < (props.options?.length || 0); i++){\r\n       if(props.options[i].correct){\r\n        correctOption = props.options[i].content;\r\n       }\r\n      }\r\n      props.setChosed(true)\r\n      props.setSelectedOption(id)\r\n      if (correct) {\r\n        props.setScore(score => score + 100)\r\n        props.setCorrectQuestions(value => value + 1)\r\n      }\r\n      props.setResults(results=>[...results, {...props.halfResult, correct:correct, correctAnswer:correctOption, answer:content }])\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"options-container m-3\">\r\n      {props.options?.map(option => {\r\n        return (\r\n          <div key={option.id}>\r\n            {props.selectedOption ?\r\n              <>\r\n                {option.correct &&\r\n                  <div className={' option-view option-correct cursor-pointer'}>{option.content}</div>\r\n                }\r\n                {((props.selectedOption === option.id) && !option.correct) &&\r\n                  <div className={' option-view option-wrong cursor-pointer'}>{option.content}</div>\r\n                }\r\n                {((props.selectedOption !== option.id) && !option.correct) &&\r\n                  <div className={' option-view option-disabled cursor-pointer'}>{option.content}</div>\r\n                }\r\n              </>\r\n              :\r\n              <div onClick={() => showResult(option.id, option.correct, option.content)} className='option-view option-normal cursor-pointer'>{option.content}</div>\r\n            }\r\n          </div>\r\n        )\r\n      }\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n","C:\\Users\\youne\\Desktop\\Brograming\\WEB\\Learning\\FinalProject\\quizblast\\my-app\\src\\components\\QuizView\\Pages\\components\\Title.tsx",[],[],"C:\\Users\\youne\\Desktop\\Brograming\\WEB\\Learning\\FinalProject\\quizblast\\my-app\\src\\components\\QuizView\\Pages\\components\\Quote.tsx",[],[],"C:\\Users\\youne\\Desktop\\Brograming\\WEB\\Learning\\FinalProject\\quizblast\\my-app\\src\\components\\QuizView\\Pages\\components\\Header.tsx",[],[],"C:\\Users\\youne\\Desktop\\Brograming\\WEB\\Learning\\FinalProject\\quizblast\\my-app\\src\\components\\QuizView\\Pages\\components\\NextBtn.tsx",[],[],"C:\\Users\\youne\\Desktop\\Brograming\\WEB\\Learning\\FinalProject\\quizblast\\my-app\\src\\components\\QuizView\\Pages\\components\\index.tsx",[],[],"C:\\Users\\youne\\Desktop\\Brograming\\WEB\\Learning\\FinalProject\\quizblast\\my-app\\src\\components\\QuizView\\Pages\\QuizResult.tsx",["191","192"],[],"import { CircularProgressbarWithChildren } from 'react-circular-progressbar';\r\n// import { sleep } from '../../ts/staticFunctions';\r\n// import { easeQuadInOut } from 'd3-ease';\r\n// import AnimatedProgressProvider from './AnimatedProgressProvider';\r\nimport MoreBtn from './components/MoreBtn';\r\nimport 'react-circular-progressbar/dist/styles.css';\r\nimport { useState, useEffect, useMemo } from 'react';\r\n\r\ninterface Results{\r\n    count:number;\r\n    Quesiton:string;\r\n    answer:string;\r\n    correct: boolean;\r\n    correctAnswer:string;\r\n    quote?:string;\r\n}\r\ninterface Props{\r\n    visible: boolean;\r\n    score: number;\r\n    correctQuestions:number;\r\n    questionLength:number | undefined;\r\n    quizname:string | undefined;\r\n    result?:Results[];\r\n}\r\n\r\nexport default function QuizResult(props: Props){\r\n    const { visible, score, correctQuestions, questionLength, quizname, result } = props;\r\n    const [animatedValue, setAnimatedValue] = useState<number>(0);\r\n\r\n    useEffect(() => {\r\n        if (visible) {\r\n            let timer = setTimeout(() => {\r\n                if(animatedValue < correctQuestions)\r\n                setAnimatedValue((old)=>{\r\n                    return parseFloat((old+(correctQuestions/100)).toFixed(2));\r\n                    \r\n                });\r\n                \r\n            }, 10)\r\n            return () => clearTimeout(timer);\r\n        }\r\n    }, [visible, animatedValue]);\r\n    useMemo(()=>{\r\n        console.log(result)\r\n    },[visible])\r\n    return (\r\n        <>\r\n            {visible && \r\n                <div className=\"flex justify-center\">\r\n                     <div className=\"flex-col w-4/5 page-container\">\r\n                        <div className=\"text-center text-xl font-semibold pt-3\">{quizname}</div>\r\n                        <div className=\"flex justify-center\">\r\n                            <div className='w-48 h-48 mt-6 mb-4'>\r\n                                <CircularProgressbarWithChildren\r\n                                    maxValue={questionLength}\r\n                                    value={animatedValue}\r\n                                    styles={{\r\n                                        trail:{\r\n                                            color: \"rgb(2 132 199)\",\r\n                                        }\r\n                                    }}\r\n                                >\r\n                                    <>\r\n                                        <div className=\"text-4xl font-extrabold text-sky-600 text-center\">{Math.round(animatedValue)}/{questionLength}</div>\r\n                                        <div className=\"text-sm text-center\">{Math.round(animatedValue*score/correctQuestions)||0} points</div>\r\n                                    </>\r\n                                </CircularProgressbarWithChildren>\r\n                            </div>\r\n                        </div>\r\n                        <MoreBtn result={result}/>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </>\r\n    );\r\n}\r\n","C:\\Users\\youne\\Desktop\\Brograming\\WEB\\Learning\\FinalProject\\quizblast\\my-app\\src\\components\\QuizView\\Pages\\AnimatedProgressProvider.tsx",[],[],"C:\\Users\\youne\\Desktop\\Brograming\\WEB\\Learning\\FinalProject\\quizblast\\my-app\\src\\components\\QuizView\\Pages\\components\\MoreBtn.tsx",[],[],"C:\\Users\\youne\\Desktop\\Brograming\\WEB\\Learning\\FinalProject\\quizblast\\my-app\\src\\components\\QuizForm\\Time.tsx",["193","194"],[],"import Select from '@mui/material/Select';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Box from '@mui/material/Box';\r\nimport { useEffect, useRef, useState } from 'react';\r\ninterface Props{\r\n    time: number\r\n    setTime : React.Dispatch<React.SetStateAction<number>>\r\n}\r\nexport default function Time(props: Props){\r\n    const {setTime, time} = props;\r\n    const Times = [\r\n        undefined,\r\n        15,\r\n        30,\r\n        45,\r\n        60\r\n    ]\r\n    \r\n    useEffect(()=>{},[])\r\n    return (\r\n        <>\r\n            <Box sx={{ minWidth: 110 }}>\r\n                <FormControl fullWidth>\r\n                    <InputLabel className='text-xl' id=\"time\">Timer</InputLabel>\r\n                    <Select\r\n                    labelId=\"time\"\r\n                    id=\"time\"\r\n                    label=\"Timer\"\r\n                    value={time}\r\n                    onChange={(event)=>setTime(typeof event.target.value === \"string\" ? parseInt(event.target.value)  :event.target.value)}\r\n                    className=' text-center h-10'\r\n                    >\r\n                        {Times.map((time: number | undefined)=>{\r\n                            return (\r\n                                time ? \r\n                                <MenuItem  value={time}>{time}s</MenuItem>\r\n                                : \r\n                                <MenuItem defaultChecked value={0}>No Limit</MenuItem>\r\n                            )\r\n                        })}\r\n                    </Select>\r\n                </FormControl>\r\n            </Box>\r\n        </>\r\n    )\r\n}\r\n",{"ruleId":"195","severity":1,"message":"196","line":62,"column":6,"nodeType":"197","endLine":62,"endColumn":8,"suggestions":"198"},{"ruleId":"195","severity":1,"message":"199","line":79,"column":4,"nodeType":"197","endLine":79,"endColumn":22,"suggestions":"200"},{"ruleId":"201","severity":1,"message":"202","line":1,"column":38,"nodeType":"203","messageId":"204","endLine":1,"endColumn":49},{"ruleId":"195","severity":1,"message":"205","line":100,"column":7,"nodeType":"197","endLine":100,"endColumn":9,"suggestions":"206"},{"ruleId":"195","severity":1,"message":"207","line":67,"column":7,"nodeType":"197","endLine":67,"endColumn":27,"suggestions":"208"},{"ruleId":"201","severity":1,"message":"209","line":1,"column":26,"nodeType":"203","messageId":"204","endLine":1,"endColumn":35},{"ruleId":"201","severity":1,"message":"210","line":1,"column":45,"nodeType":"203","messageId":"204","endLine":1,"endColumn":53},{"ruleId":"211","severity":1,"message":"212","line":17,"column":7,"nodeType":"203","messageId":"213","endLine":17,"endColumn":11},{"ruleId":"201","severity":1,"message":"214","line":21,"column":45,"nodeType":"203","messageId":"204","endLine":21,"endColumn":50},{"ruleId":"201","severity":1,"message":"215","line":22,"column":11,"nodeType":"203","messageId":"204","endLine":22,"endColumn":18},{"ruleId":"201","severity":1,"message":"210","line":1,"column":17,"nodeType":"203","messageId":"204","endLine":1,"endColumn":25},{"ruleId":"195","severity":1,"message":"216","line":42,"column":8,"nodeType":"197","endLine":42,"endColumn":32,"suggestions":"217"},{"ruleId":"195","severity":1,"message":"218","line":45,"column":7,"nodeType":"197","endLine":45,"endColumn":16,"suggestions":"219"},{"ruleId":"201","severity":1,"message":"220","line":6,"column":21,"nodeType":"203","messageId":"204","endLine":6,"endColumn":27},{"ruleId":"201","severity":1,"message":"210","line":6,"column":29,"nodeType":"203","messageId":"204","endLine":6,"endColumn":37},"react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'display'. Either include it or remove the dependency array. You can also do a functional update 'setDisplays(d => ...)' if you only need 'display' in the 'setDisplays' call.","ArrayExpression",["221"],"React Hook useEffect has missing dependencies: 'loaded' and 'navigateTo'. Either include them or remove the dependency array.",["222"],"@typescript-eslint/no-unused-vars","'useCallback' is defined but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'link' and 'method'. Either include them or remove the dependency array.",["223"],"React Hook useEffect has a missing dependency: 'Quiz?.questions'. Either include it or remove the dependency array.",["224"],"'useEffect' is defined but never used.","'useState' is defined but never used.","@typescript-eslint/no-redeclare","'Quiz' is already defined.","redeclared","'error' is assigned a value but never used.","'oldData' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'correctQuestions'. Either include it or remove the dependency array.",["225"],"React Hook useMemo has a missing dependency: 'result'. Either include it or remove the dependency array.",["226"],"'useRef' is defined but never used.",{"desc":"227","fix":"228"},{"desc":"229","fix":"230"},{"desc":"231","fix":"232"},{"desc":"233","fix":"234"},{"desc":"235","fix":"236"},{"desc":"237","fix":"238"},"Update the dependencies array to be: [display]",{"range":"239","text":"240"},"Update the dependencies array to be: [is_authenticated, loaded, navigateTo]",{"range":"241","text":"242"},"Update the dependencies array to be: [link, method]",{"range":"243","text":"244"},"Update the dependencies array to be: [Quiz?.questions, pageCount, visible]",{"range":"245","text":"246"},"Update the dependencies array to be: [visible, animatedValue, correctQuestions]",{"range":"247","text":"248"},"Update the dependencies array to be: [result]",{"range":"249","text":"250"},[1513,1515],"[display]",[2113,2131],"[is_authenticated, loaded, navigateTo]",[2677,2679],"[link, method]",[1802,1822],"[Quiz?.questions, pageCount, visible]",[1380,1404],"[visible, animatedValue, correctQuestions]",[1462,1471],"[result]"]